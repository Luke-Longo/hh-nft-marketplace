/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../../common";
import type {
  Attack,
  AttackInterface,
} from "../../../../contracts/sublesson/ReentrantVulnerable.sol/Attack";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_reentrantVulnerable",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    stateMutability: "payable",
    type: "fallback",
  },
  {
    inputs: [],
    name: "attack",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "getBalance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "reentrantVulnerable",
    outputs: [
      {
        internalType: "contract ReentrantVulnerable",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b5060405161049a38038061049a8339818101604052810190610032919061008d565b806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050610108565b600081519050610087816100f1565b92915050565b6000602082840312156100a3576100a26100ec565b5b60006100b184828501610078565b91505092915050565b60006100c5826100cc565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600080fd5b6100fa816100ba565b811461010557600080fd5b50565b610383806101176000396000f3fe6080604052600436106100385760003560e01c806312065fe01461010257806333684a051461012d5780639e5faafc1461015857610039565b5b670de0b6b3a764000060008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1631106101005760008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16633ccfd60b6040518163ffffffff1660e01b8152600401600060405180830381600087803b1580156100e757600080fd5b505af11580156100fb573d6000803e3d6000fd5b505050505b005b34801561010e57600080fd5b50610117610162565b60405161012491906102d2565b60405180910390f35b34801561013957600080fd5b5061014261016a565b60405161014f91906102b7565b60405180910390f35b61016061018e565b005b600047905090565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663d0e30db0670de0b6b3a76400006040518263ffffffff1660e01b81526004016000604051808303818588803b1580156101fe57600080fd5b505af1158015610212573d6000803e3d6000fd5b505050505060008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16633ccfd60b6040518163ffffffff1660e01b8152600401600060405180830381600087803b15801561027f57600080fd5b505af1158015610293573d6000803e3d6000fd5b50505050565b6102a281610317565b82525050565b6102b18161030d565b82525050565b60006020820190506102cc6000830184610299565b92915050565b60006020820190506102e760008301846102a8565b92915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b600061032282610329565b9050919050565b60006103348261033b565b9050919050565b6000610346826102ed565b905091905056fea26469706673582212204a33c282bda8ea5eac11a772f925f7664c85e274ec7663a2f4035269a525acaf64736f6c63430008070033";

type AttackConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: AttackConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Attack__factory extends ContractFactory {
  constructor(...args: AttackConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _reentrantVulnerable: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<Attack> {
    return super.deploy(
      _reentrantVulnerable,
      overrides || {}
    ) as Promise<Attack>;
  }
  override getDeployTransaction(
    _reentrantVulnerable: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_reentrantVulnerable, overrides || {});
  }
  override attach(address: string): Attack {
    return super.attach(address) as Attack;
  }
  override connect(signer: Signer): Attack__factory {
    return super.connect(signer) as Attack__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): AttackInterface {
    return new utils.Interface(_abi) as AttackInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): Attack {
    return new Contract(address, _abi, signerOrProvider) as Attack;
  }
}
