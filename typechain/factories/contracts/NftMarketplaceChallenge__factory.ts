/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../common";
import type {
  NftMarketplaceChallenge,
  NftMarketplaceChallengeInterface,
} from "../../contracts/NftMarketplaceChallenge";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_daiAddress",
        type: "address",
      },
      {
        internalType: "address",
        name: "_usdcAddress",
        type: "address",
      },
      {
        internalType: "address",
        name: "_ethPriceFeed",
        type: "address",
      },
      {
        internalType: "address",
        name: "_daiPricefeed",
        type: "address",
      },
      {
        internalType: "address",
        name: "_usdcPricefeed",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "NftMarketplace__ERC20ApproveFailed",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "nftAddress",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "NftMarketplace__NftAlreadyListed",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "withdrawer",
        type: "address",
      },
    ],
    name: "NftMarketplace__NoProceeds",
    type: "error",
  },
  {
    inputs: [],
    name: "NftMarketplace__NotApproved",
    type: "error",
  },
  {
    inputs: [],
    name: "NftMarketplace__NotApprovedToken",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "nftAddress",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "NftMarketplace__NotListed",
    type: "error",
  },
  {
    inputs: [],
    name: "NftMarketplace__NotOwner",
    type: "error",
  },
  {
    inputs: [],
    name: "NftMarketplace__PriceMustBeGreaterThanZero",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "nftAddress",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "price",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "token",
        type: "uint256",
      },
    ],
    name: "NftMarketplace__PriceNotMet",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "withdrawer",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "NftMarketplace__WithdrawFailed",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "nftAddress",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "tokenId",
            type: "uint256",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "amount",
                type: "uint256",
              },
              {
                internalType: "enum NftMarketplaceChallenge.Token",
                name: "token",
                type: "uint8",
              },
            ],
            internalType: "struct NftMarketplaceChallenge.Pricing",
            name: "pricing",
            type: "tuple",
          },
        ],
        indexed: false,
        internalType: "struct NftMarketplaceChallenge.ListingParams",
        name: "listingParams",
        type: "tuple",
      },
      {
        indexed: true,
        internalType: "address",
        name: "buyer",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "seller",
        type: "address",
      },
    ],
    name: "ItemBought",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "nftAddress",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "tokenId",
            type: "uint256",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "amount",
                type: "uint256",
              },
              {
                internalType: "enum NftMarketplaceChallenge.Token",
                name: "token",
                type: "uint8",
              },
            ],
            internalType: "struct NftMarketplaceChallenge.Pricing",
            name: "pricing",
            type: "tuple",
          },
        ],
        indexed: false,
        internalType: "struct NftMarketplaceChallenge.ListingParams",
        name: "listingParams",
        type: "tuple",
      },
      {
        indexed: false,
        internalType: "address",
        name: "seller",
        type: "address",
      },
    ],
    name: "ItemListed",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "nftAddress",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "address",
        name: "seller",
        type: "address",
      },
    ],
    name: "ListingCancelled",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "withdrawer",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "token",
        type: "uint256",
      },
    ],
    name: "Withdraw",
    type: "event",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "nftAddress",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "tokenId",
            type: "uint256",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "amount",
                type: "uint256",
              },
              {
                internalType: "enum NftMarketplaceChallenge.Token",
                name: "token",
                type: "uint8",
              },
            ],
            internalType: "struct NftMarketplaceChallenge.Pricing",
            name: "pricing",
            type: "tuple",
          },
        ],
        internalType: "struct NftMarketplaceChallenge.ListingParams",
        name: "listingParams",
        type: "tuple",
      },
    ],
    name: "buyItem",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "nftAddress",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "cancelListing",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "nftAddress",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "getListing",
    outputs: [
      {
        components: [
          {
            components: [
              {
                internalType: "uint256",
                name: "amount",
                type: "uint256",
              },
              {
                internalType: "enum NftMarketplaceChallenge.Token",
                name: "token",
                type: "uint8",
              },
            ],
            internalType: "struct NftMarketplaceChallenge.Pricing",
            name: "pricing",
            type: "tuple",
          },
          {
            internalType: "address",
            name: "seller",
            type: "address",
          },
        ],
        internalType: "struct NftMarketplaceChallenge.Listing",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        internalType: "enum NftMarketplaceChallenge.Token",
        name: "token",
        type: "uint8",
      },
    ],
    name: "getProceeds",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "nftAddress",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "tokenId",
            type: "uint256",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "amount",
                type: "uint256",
              },
              {
                internalType: "enum NftMarketplaceChallenge.Token",
                name: "token",
                type: "uint8",
              },
            ],
            internalType: "struct NftMarketplaceChallenge.Pricing",
            name: "pricing",
            type: "tuple",
          },
        ],
        internalType: "struct NftMarketplaceChallenge.ListingParams",
        name: "listingParams",
        type: "tuple",
      },
    ],
    name: "listItem",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "enum NftMarketplaceChallenge.Token",
        name: "",
        type: "uint8",
      },
    ],
    name: "tokenAddresses",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "nftAddress",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "tokenId",
            type: "uint256",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "amount",
                type: "uint256",
              },
              {
                internalType: "enum NftMarketplaceChallenge.Token",
                name: "token",
                type: "uint8",
              },
            ],
            internalType: "struct NftMarketplaceChallenge.Pricing",
            name: "pricing",
            type: "tuple",
          },
        ],
        internalType: "struct NftMarketplaceChallenge.ListingParams",
        name: "listingParams",
        type: "tuple",
      },
    ],
    name: "updateListing",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "withdrawAllProceeds",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "enum NftMarketplaceChallenge.Token",
        name: "token",
        type: "uint8",
      },
    ],
    name: "withdrawSingleProceeds",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60e06040523480156200001157600080fd5b506040516200310e3803806200310e83398181016040528101906200003791906200027c565b60016000819055506000600360008060028111156200005b576200005a62000338565b5b600281111562000070576200006f62000338565b5b815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550846003600060016002811115620000d857620000d762000338565b5b6002811115620000ed57620000ec62000338565b5b815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550836003600060028081111562000154576200015362000338565b5b600281111562000169576200016862000338565b5b815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508273ffffffffffffffffffffffffffffffffffffffff1660808173ffffffffffffffffffffffffffffffffffffffff1660601b815250508173ffffffffffffffffffffffffffffffffffffffff1660a08173ffffffffffffffffffffffffffffffffffffffff1660601b815250508073ffffffffffffffffffffffffffffffffffffffff1660c08173ffffffffffffffffffffffffffffffffffffffff1660601b81525050505050505062000386565b60008151905062000276816200036c565b92915050565b600080600080600060a086880312156200029b576200029a62000367565b5b6000620002ab8882890162000265565b9550506020620002be8882890162000265565b9450506040620002d18882890162000265565b9350506060620002e48882890162000265565b9250506080620002f78882890162000265565b9150509295509295909350565b6000620003118262000318565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b600080fd5b620003778162000304565b81146200038357600080fd5b50565b60805160601c60a05160601c60c05160601c612d58620003b6600039600050506000505060005050612d586000f3fe6080604052600436106100865760003560e01c8063b2ddee0611610059578063b2ddee0614610136578063cf0d74371461015f578063d794bb281461019c578063ecc9379d146101d9578063f1c1689b146101f057610086565b806366fee1f51461008b5780636714530d146100a757806388700d1c146100d0578063a646dc7a1461010d575b600080fd5b6100a560048036038101906100a091906126e3565b610219565b005b3480156100b357600080fd5b506100ce60048036038101906100c991906126b6565b610e9b565b005b3480156100dc57600080fd5b506100f760048036038101906100f29190612649565b611513565b60405161010491906129fb565b60405180910390f35b34801561011957600080fd5b50610134600480360381019061012f91906126e3565b61162d565b005b34801561014257600080fd5b5061015d60048036038101906101589190612649565b611bfd565b005b34801561016b57600080fd5b50610186600480360381019061018191906126b6565b611f5a565b6040516101939190612892565b60405180910390f35b3480156101a857600080fd5b506101c360048036038101906101be9190612609565b611f8d565b6040516101d09190612a16565b60405180910390f35b3480156101e557600080fd5b506101ee61206b565b005b3480156101fc57600080fd5b50610217600480360381019061021291906126e3565b6120fe565b005b806000015181602001516000600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600083815260200190815260200160002060405180604001604052908160008201604051806040016040529081600082015481526020016001820160009054906101000a900460ff1660028111156102bf576102be612c14565b5b60028111156102d1576102d0612c14565b5b8152505081526020016002820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152505090506000816000015160000151116103805782826040517f6d350f2200000000000000000000000000000000000000000000000000000000815260040161037792919061290d565b60405180910390fd5b8360400151602001516000600281111561039d5761039c612c14565b5b8160028111156103b0576103af612c14565b5b141580156103e35750600160028111156103cd576103cc612c14565b5b8160028111156103e0576103df612c14565b5b14155b801561041357506002808111156103fd576103fc612c14565b5b8160028111156104105761040f612c14565b5b14155b1561044a576040517f6752f48700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b84600060016000836000015173ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008360200151815260200190815260200160002060405180604001604052908160008201604051806040016040529081600082015481526020016001820160009054906101000a900460ff1660028111156104ef576104ee612c14565b5b600281111561050157610500612c14565b5b8152505081526020016002820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152505090506000600281111561057557610574612c14565b5b82604001516020015160028111156105905761058f612c14565b5b141561061857806000015160000151341015610613578160000151826020015183604001516000015184604001516020015160028111156105d4576105d3612c14565b5b6040517f8bb3a8f300000000000000000000000000000000000000000000000000000000815260040161060a949392919061296d565b60405180910390fd5b610783565b600060036000846040015160200151600281111561063957610638612c14565b5b600281111561064b5761064a612c14565b5b815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690508260400151600001518173ffffffffffffffffffffffffffffffffffffffff166370a08231336040518263ffffffff1660e01b81526004016106be9190612892565b60206040518083038186803b1580156106d657600080fd5b505afa1580156106ea573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061070e9190612710565b10156107815782600001518360200151846040015160000151856040015160200151600281111561074257610741612c14565b5b6040517f8bb3a8f3000000000000000000000000000000000000000000000000000000008152600401610778949392919061296d565b60405180910390fd5b505b600260005414156107c9576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107c0906129b2565b60405180910390fd5b6002600081905550600080600160008a6000015173ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008a60200151815260200190815260200160002060405180604001604052908160008201604051806040016040529081600082015481526020016001820160009054906101000a900460ff16600281111561087657610875612c14565b5b600281111561088857610887612c14565b5b8152505081526020016002820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152505090506000896000015190506000600281111561090557610904612c14565b5b8a604001516020015160028111156109205761091f612c14565b5b14610bf357600360008b6040015160200151600281111561094457610943612c14565b5b600281111561095657610955612c14565b5b815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16925060008373ffffffffffffffffffffffffffffffffffffffff1663095ea7b384602001518d60400151600001516040518363ffffffff1660e01b81526004016109d092919061290d565b602060405180830381600087803b1580156109ea57600080fd5b505af11580156109fe573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a229190612689565b905080610a5b576040517ff2d5f7bf00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8373ffffffffffffffffffffffffffffffffffffffff166323b872dd33308e60400151600001516040518463ffffffff1660e01b8152600401610aa0939291906128d6565b602060405180830381600087803b158015610aba57600080fd5b505af1158015610ace573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610af29190612689565b508a604001516000015160026000856020015173ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000600360008f60400151602001516002811115610b6057610b5f612c14565b5b6002811115610b7257610b71612c14565b5b815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254610bea9190612a72565b92505081905550505b60006002811115610c0757610c06612c14565b5b8a60400151602001516002811115610c2257610c21612c14565b5b1415610d17573460026000846020015173ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600060036000806002811115610c8557610c84612c14565b5b6002811115610c9757610c96612c14565b5b815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254610d0f9190612a72565b925050819055505b600160008b6000015173ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008b60200151815260200190815260200160002060008082016000808201600090556001820160006101000a81549060ff021916905550506002820160006101000a81549073ffffffffffffffffffffffffffffffffffffffff021916905550508073ffffffffffffffffffffffffffffffffffffffff166342842e0e8360200151338d602001516040518463ffffffff1660e01b8152600401610e01939291906128d6565b600060405180830381600087803b158015610e1b57600080fd5b505af1158015610e2f573d6000803e3d6000fd5b505050503373ffffffffffffffffffffffffffffffffffffffff167f5a58d5efb805360c1d439380675d6b4d557bada5737540b8c2ba2b361443942e8b8460200151604051610e7f9291906129d2565b60405180910390a2505050600160008190555050505050505050565b60026000541415610ee1576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610ed8906129b2565b60405180910390fd5b60026000819055506000600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600060036000856002811115610f4357610f42612c14565b5b6002811115610f5557610f54612c14565b5b815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205490506000811161100657336040517f11b60bf4000000000000000000000000000000000000000000000000000000008152600401610ffd9190612892565b60405180910390fd5b6000600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000600360008660028111156110605761105f612c14565b5b600281111561107257611071612c14565b5b815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550600060028111156110f3576110f2612c14565b5b82600281111561110657611105612c14565b5b141561129a5760003373ffffffffffffffffffffffffffffffffffffffff16826040516111329061287d565b60006040518083038185875af1925050503d806000811461116f576040519150601f19603f3d011682016040523d82523d6000602084013e611174565b606091505b50509050806112945781600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000600360008760028111156111d6576111d5612c14565b5b60028111156111e8576111e7612c14565b5b815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555033826040517f840e80d800000000000000000000000000000000000000000000000000000000815260040161128b92919061290d565b60405180910390fd5b506114a6565b6000600360008460028111156112b3576112b2612c14565b5b60028111156112c5576112c4612c14565b5b815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905060008173ffffffffffffffffffffffffffffffffffffffff1663a9059cbb33856040518363ffffffff1660e01b81526004016113339291906128ad565b602060405180830381600087803b15801561134d57600080fd5b505af1158015611361573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906113859190612689565b9050806114a35782600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000600360008860028111156113e5576113e4612c14565b5b60028111156113f7576113f6612c14565b5b815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555033836040517f840e80d800000000000000000000000000000000000000000000000000000000815260040161149a92919061290d565b60405180910390fd5b50505b803373ffffffffffffffffffffffffffffffffffffffff167ff279e6a1f5e320cca91135676d9cb6e44ca8a08c0b88342bcdb1144f6511b5688460028111156114f2576114f1612c14565b5b6040516114ff9190612a16565b60405180910390a350600160008190555050565b61151b612448565b600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600083815260200190815260200160002060405180604001604052908160008201604051806040016040529081600082015481526020016001820160009054906101000a900460ff1660028111156115b5576115b4612c14565b5b60028111156115c7576115c6612c14565b5b8152505081526020016002820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681525050905092915050565b80600001518160200151336000600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600084815260200190815260200160002060405180604001604052908160008201604051806040016040529081600082015481526020016001820160009054906101000a900460ff1660028111156116d4576116d3612c14565b5b60028111156116e6576116e5612c14565b5b8152505081526020016002820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681525050905060008160000151600001511115611798578383836040517f73a5c40a00000000000000000000000000000000000000000000000000000000815260040161178f93929190612936565b60405180910390fd5b8460000151856020015133600083905060008173ffffffffffffffffffffffffffffffffffffffff16636352211e856040518263ffffffff1660e01b81526004016117e39190612a16565b60206040518083038186803b1580156117fb57600080fd5b505afa15801561180f573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061183391906125dc565b90508273ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161461189a576040517f94953b6000000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b896040015160200151600060028111156118b7576118b6612c14565b5b8160028111156118ca576118c9612c14565b5b141580156118fd5750600160028111156118e7576118e6612c14565b5b8160028111156118fa576118f9612c14565b5b14155b801561192d575060028081111561191757611916612c14565b5b81600281111561192a57611929612c14565b5b14155b15611964576040517f6752f48700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60008b6040015160000151116119a6576040517ffcfdbf1200000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60008b6000015190503073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1663081812fc8e602001516040518263ffffffff1660e01b8152600401611a039190612a16565b60206040518083038186803b158015611a1b57600080fd5b505afa158015611a2f573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611a5391906125dc565b73ffffffffffffffffffffffffffffffffffffffff1614611aa0576040517f8189633e00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60405180604001604052808d6040015181526020013373ffffffffffffffffffffffffffffffffffffffff16815250600160008e6000015173ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008e6020015181526020019081526020016000206000820151816000016000820151816000015560208201518160010160006101000a81548160ff02191690836002811115611b6557611b64612c14565b5b0217905550505060208201518160020160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055509050507f4ae53a3535aa51e5e1f121627676cb38488eba0ff4b93cdb333b2c8a345602038c33604051611be79291906129d2565b60405180910390a1505050505050505050505050565b818133600083905060008173ffffffffffffffffffffffffffffffffffffffff16636352211e856040518263ffffffff1660e01b8152600401611c409190612a16565b60206040518083038186803b158015611c5857600080fd5b505afa158015611c6c573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611c9091906125dc565b90508273ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614611cf7576040517f94953b6000000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b86866000600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600083815260200190815260200160002060405180604001604052908160008201604051806040016040529081600082015481526020016001820160009054906101000a900460ff166002811115611d9557611d94612c14565b5b6002811115611da757611da6612c14565b5b8152505081526020016002820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815250509050600081600001516000015111611e565782826040517f6d350f22000000000000000000000000000000000000000000000000000000008152600401611e4d92919061290d565b60405180910390fd5b600160008b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008a815260200190815260200160002060008082016000808201600090556001820160006101000a81549060ff021916905550506002820160006101000a81549073ffffffffffffffffffffffffffffffffffffffff021916905550503373ffffffffffffffffffffffffffffffffffffffff16898b73ffffffffffffffffffffffffffffffffffffffff167f8526cb6d400b8a551983c99e6d6fb1775b7a0deeb5d1e39d3ee65bc59e5eac2760405160405180910390a450505050505050505050565b60036020528060005260406000206000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000600260008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600060036000856002811115611fe757611fe6612c14565b5b6002811115611ff957611ff8612c14565b5b815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b600260005414156120b1576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016120a8906129b2565b60405180910390fd5b600260008190555060005b60038110156120f3576120e08160028111156120db576120da612c14565b5b610e9b565b80806120eb90612b9c565b9150506120bc565b506001600081905550565b8060000151816020015133600083905060008173ffffffffffffffffffffffffffffffffffffffff16636352211e856040518263ffffffff1660e01b81526004016121499190612a16565b60206040518083038186803b15801561216157600080fd5b505afa158015612175573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061219991906125dc565b90508273ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614612200576040517f94953b6000000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b856000015186602001516000600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600083815260200190815260200160002060405180604001604052908160008201604051806040016040529081600082015481526020016001820160009054906101000a900460ff1660028111156122a6576122a5612c14565b5b60028111156122b8576122b7612c14565b5b8152505081526020016002820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152505090506000816000015160000151116123675782826040517f6d350f2200000000000000000000000000000000000000000000000000000000815260040161235e92919061290d565b60405180910390fd5b8860400151600160008b6000015173ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008b6020015181526020019081526020016000206000016000820151816000015560208201518160010160006101000a81548160ff021916908360028111156123fc576123fb612c14565b5b02179055509050507f4ae53a3535aa51e5e1f121627676cb38488eba0ff4b93cdb333b2c8a3456020389336040516124359291906129d2565b60405180910390a1505050505050505050565b604051806040016040528061245b61247e565b8152602001600073ffffffffffffffffffffffffffffffffffffffff1681525090565b604051806040016040528060008152602001600060028111156124a4576124a3612c14565b5b81525090565b6000813590506124b981612ccd565b92915050565b6000815190506124ce81612ccd565b92915050565b6000815190506124e381612ce4565b92915050565b6000813590506124f881612cfb565b92915050565b60006080828403121561251457612513612c72565b5b61251e6060612a31565b9050600061252e848285016124aa565b6000830152506020612542848285016125b2565b602083015250604061255684828501612562565b60408301525092915050565b60006040828403121561257857612577612c72565b5b6125826040612a31565b90506000612592848285016125b2565b60008301525060206125a6848285016124e9565b60208301525092915050565b6000813590506125c181612d0b565b92915050565b6000815190506125d681612d0b565b92915050565b6000602082840312156125f2576125f1612c77565b5b6000612600848285016124bf565b91505092915050565b600080604083850312156126205761261f612c77565b5b600061262e858286016124aa565b925050602061263f858286016124e9565b9150509250929050565b600080604083850312156126605761265f612c77565b5b600061266e858286016124aa565b925050602061267f858286016125b2565b9150509250929050565b60006020828403121561269f5761269e612c77565b5b60006126ad848285016124d4565b91505092915050565b6000602082840312156126cc576126cb612c77565b5b60006126da848285016124e9565b91505092915050565b6000608082840312156126f9576126f8612c77565b5b6000612707848285016124fe565b91505092915050565b60006020828403121561272657612725612c77565b5b6000612734848285016125c7565b91505092915050565b61274681612b23565b82525050565b61275581612ac8565b82525050565b61276481612ac8565b82525050565b61277381612b35565b82525050565b6000612786600083612a56565b915061279182612c8d565b600082019050919050565b60006127a9601f83612a61565b91506127b482612c90565b602082019050919050565b6080820160008201516127d5600085018261274c565b5060208201516127e8602085018261285f565b5060408201516127fb6040850182612830565b50505050565b6060820160008201516128176000850182612830565b50602082015161282a604085018261274c565b50505050565b604082016000820151612846600085018261285f565b506020820151612859602085018261276a565b50505050565b61286881612b19565b82525050565b61287781612b19565b82525050565b600061288882612779565b9150819050919050565b60006020820190506128a7600083018461275b565b92915050565b60006040820190506128c2600083018561273d565b6128cf602083018461286e565b9392505050565b60006060820190506128eb600083018661275b565b6128f8602083018561275b565b612905604083018461286e565b949350505050565b6000604082019050612922600083018561275b565b61292f602083018461286e565b9392505050565b600060608201905061294b600083018661275b565b612958602083018561286e565b612965604083018461275b565b949350505050565b6000608082019050612982600083018761275b565b61298f602083018661286e565b61299c604083018561286e565b6129a9606083018461286e565b95945050505050565b600060208201905081810360008301526129cb8161279c565b9050919050565b600060a0820190506129e760008301856127bf565b6129f4608083018461275b565b9392505050565b6000606082019050612a106000830184612801565b92915050565b6000602082019050612a2b600083018461286e565b92915050565b6000612a3b612a4c565b9050612a478282612b6b565b919050565b6000604051905090565b600081905092915050565b600082825260208201905092915050565b6000612a7d82612b19565b9150612a8883612b19565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115612abd57612abc612be5565b5b828201905092915050565b6000612ad382612af9565b9050919050565b60008115159050919050565b6000819050612af482612cb9565b919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b6000612b2e82612b47565b9050919050565b6000612b4082612ae6565b9050919050565b6000612b5282612b59565b9050919050565b6000612b6482612af9565b9050919050565b612b7482612c7c565b810181811067ffffffffffffffff82111715612b9357612b92612c43565b5b80604052505050565b6000612ba782612b19565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff821415612bda57612bd9612be5565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600080fd5b600080fd5b6000601f19601f8301169050919050565b50565b7f5265656e7472616e637947756172643a207265656e7472616e742063616c6c00600082015250565b60038110612cca57612cc9612c14565b5b50565b612cd681612ac8565b8114612ce157600080fd5b50565b612ced81612ada565b8114612cf857600080fd5b50565b60038110612d0857600080fd5b50565b612d1481612b19565b8114612d1f57600080fd5b5056fea2646970667358221220bc52976ca2a1b6e2624a65c9e22bf69c903b9d98bc8d13ab6600205ce055e75e64736f6c63430008070033";

type NftMarketplaceChallengeConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: NftMarketplaceChallengeConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class NftMarketplaceChallenge__factory extends ContractFactory {
  constructor(...args: NftMarketplaceChallengeConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _daiAddress: PromiseOrValue<string>,
    _usdcAddress: PromiseOrValue<string>,
    _ethPriceFeed: PromiseOrValue<string>,
    _daiPricefeed: PromiseOrValue<string>,
    _usdcPricefeed: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<NftMarketplaceChallenge> {
    return super.deploy(
      _daiAddress,
      _usdcAddress,
      _ethPriceFeed,
      _daiPricefeed,
      _usdcPricefeed,
      overrides || {}
    ) as Promise<NftMarketplaceChallenge>;
  }
  override getDeployTransaction(
    _daiAddress: PromiseOrValue<string>,
    _usdcAddress: PromiseOrValue<string>,
    _ethPriceFeed: PromiseOrValue<string>,
    _daiPricefeed: PromiseOrValue<string>,
    _usdcPricefeed: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _daiAddress,
      _usdcAddress,
      _ethPriceFeed,
      _daiPricefeed,
      _usdcPricefeed,
      overrides || {}
    );
  }
  override attach(address: string): NftMarketplaceChallenge {
    return super.attach(address) as NftMarketplaceChallenge;
  }
  override connect(signer: Signer): NftMarketplaceChallenge__factory {
    return super.connect(signer) as NftMarketplaceChallenge__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): NftMarketplaceChallengeInterface {
    return new utils.Interface(_abi) as NftMarketplaceChallengeInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): NftMarketplaceChallenge {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as NftMarketplaceChallenge;
  }
}
