/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../common";
import type {
  NftMarketplaceChallenge,
  NftMarketplaceChallengeInterface,
} from "../../contracts/NftMarketplaceChallenge";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_daiAddress",
        type: "address",
      },
      {
        internalType: "address",
        name: "_usdcAddress",
        type: "address",
      },
      {
        internalType: "address",
        name: "_ethPriceFeed",
        type: "address",
      },
      {
        internalType: "address",
        name: "_daiPricefeed",
        type: "address",
      },
      {
        internalType: "address",
        name: "_usdcPricefeed",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "NftMarketplace__ERC20ApproveFailed",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "nftAddress",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "NftMarketplace__NftAlreadyListed",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "withdrawer",
        type: "address",
      },
    ],
    name: "NftMarketplace__NoProceeds",
    type: "error",
  },
  {
    inputs: [],
    name: "NftMarketplace__NotApproved",
    type: "error",
  },
  {
    inputs: [],
    name: "NftMarketplace__NotApprovedToken",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "nftAddress",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "NftMarketplace__NotListed",
    type: "error",
  },
  {
    inputs: [],
    name: "NftMarketplace__NotOwner",
    type: "error",
  },
  {
    inputs: [],
    name: "NftMarketplace__PriceMustBeGreaterThanZero",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "nftAddress",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "price",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "token",
        type: "uint256",
      },
    ],
    name: "NftMarketplace__PriceNotMet",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "withdrawer",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "NftMarketplace__WithdrawFailed",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "nftAddress",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "tokenId",
            type: "uint256",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "amount",
                type: "uint256",
              },
              {
                internalType: "enum NftMarketplaceChallenge.Token",
                name: "token",
                type: "uint8",
              },
            ],
            internalType: "struct NftMarketplaceChallenge.Pricing",
            name: "pricing",
            type: "tuple",
          },
        ],
        indexed: false,
        internalType: "struct NftMarketplaceChallenge.ListingParams",
        name: "listingParams",
        type: "tuple",
      },
      {
        indexed: true,
        internalType: "address",
        name: "buyer",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "seller",
        type: "address",
      },
    ],
    name: "ItemBought",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "nftAddress",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "tokenId",
            type: "uint256",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "amount",
                type: "uint256",
              },
              {
                internalType: "enum NftMarketplaceChallenge.Token",
                name: "token",
                type: "uint8",
              },
            ],
            internalType: "struct NftMarketplaceChallenge.Pricing",
            name: "pricing",
            type: "tuple",
          },
        ],
        indexed: false,
        internalType: "struct NftMarketplaceChallenge.ListingParams",
        name: "listingParams",
        type: "tuple",
      },
      {
        indexed: false,
        internalType: "address",
        name: "seller",
        type: "address",
      },
    ],
    name: "ItemListed",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "nftAddress",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "address",
        name: "seller",
        type: "address",
      },
    ],
    name: "ListingCancelled",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "withdrawer",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "token",
        type: "uint256",
      },
    ],
    name: "Withdraw",
    type: "event",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "nftAddress",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "tokenId",
            type: "uint256",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "amount",
                type: "uint256",
              },
              {
                internalType: "enum NftMarketplaceChallenge.Token",
                name: "token",
                type: "uint8",
              },
            ],
            internalType: "struct NftMarketplaceChallenge.Pricing",
            name: "pricing",
            type: "tuple",
          },
        ],
        internalType: "struct NftMarketplaceChallenge.ListingParams",
        name: "listingParams",
        type: "tuple",
      },
    ],
    name: "buyItem",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "nftAddress",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "cancelListing",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "nftAddress",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "getListing",
    outputs: [
      {
        components: [
          {
            components: [
              {
                internalType: "uint256",
                name: "amount",
                type: "uint256",
              },
              {
                internalType: "enum NftMarketplaceChallenge.Token",
                name: "token",
                type: "uint8",
              },
            ],
            internalType: "struct NftMarketplaceChallenge.Pricing",
            name: "pricing",
            type: "tuple",
          },
          {
            internalType: "address",
            name: "seller",
            type: "address",
          },
        ],
        internalType: "struct NftMarketplaceChallenge.Listing",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "nftAddress",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "getListingPrice",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "amount",
            type: "uint256",
          },
          {
            internalType: "enum NftMarketplaceChallenge.Token",
            name: "token",
            type: "uint8",
          },
        ],
        internalType: "struct NftMarketplaceChallenge.Pricing",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "nftAddress",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "getListingPriceUsd",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        internalType: "enum NftMarketplaceChallenge.Token",
        name: "token",
        type: "uint8",
      },
    ],
    name: "getProceeds",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "nftAddress",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "tokenId",
            type: "uint256",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "amount",
                type: "uint256",
              },
              {
                internalType: "enum NftMarketplaceChallenge.Token",
                name: "token",
                type: "uint8",
              },
            ],
            internalType: "struct NftMarketplaceChallenge.Pricing",
            name: "pricing",
            type: "tuple",
          },
        ],
        internalType: "struct NftMarketplaceChallenge.ListingParams",
        name: "listingParams",
        type: "tuple",
      },
    ],
    name: "listItem",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "enum NftMarketplaceChallenge.Token",
        name: "",
        type: "uint8",
      },
    ],
    name: "tokenAddresses",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "nftAddress",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "tokenId",
            type: "uint256",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "amount",
                type: "uint256",
              },
              {
                internalType: "enum NftMarketplaceChallenge.Token",
                name: "token",
                type: "uint8",
              },
            ],
            internalType: "struct NftMarketplaceChallenge.Pricing",
            name: "pricing",
            type: "tuple",
          },
        ],
        internalType: "struct NftMarketplaceChallenge.ListingParams",
        name: "listingParams",
        type: "tuple",
      },
    ],
    name: "updateListing",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "withdrawAllProceeds",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "enum NftMarketplaceChallenge.Token",
        name: "token",
        type: "uint8",
      },
    ],
    name: "withdrawSingleProceeds",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60e06040523480156200001157600080fd5b50604051620038433803806200384383398181016040528101906200003791906200027c565b60016000819055506000600360008060028111156200005b576200005a62000338565b5b600281111562000070576200006f62000338565b5b815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550846003600060016002811115620000d857620000d762000338565b5b6002811115620000ed57620000ec62000338565b5b815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550836003600060028081111562000154576200015362000338565b5b600281111562000169576200016862000338565b5b815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508273ffffffffffffffffffffffffffffffffffffffff1660808173ffffffffffffffffffffffffffffffffffffffff1660601b815250508173ffffffffffffffffffffffffffffffffffffffff1660a08173ffffffffffffffffffffffffffffffffffffffff1660601b815250508073ffffffffffffffffffffffffffffffffffffffff1660c08173ffffffffffffffffffffffffffffffffffffffff1660601b81525050505050505062000386565b60008151905062000276816200036c565b92915050565b600080600080600060a086880312156200029b576200029a62000367565b5b6000620002ab8882890162000265565b9550506020620002be8882890162000265565b9450506040620002d18882890162000265565b9350506060620002e48882890162000265565b9250506080620002f78882890162000265565b9150509295509295909350565b6000620003118262000318565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b600080fd5b620003778162000304565b81146200038357600080fd5b50565b60805160601c60a05160601c60c05160601c613484620003bf6000396000611a86015260006119a0015260006118b901526134846000f3fe60806040526004361061009c5760003560e01c8063a646dc7a11610064578063a646dc7a1461019d578063b2ddee06146101c6578063cf0d7437146101ef578063d794bb281461022c578063ecc9379d14610269578063f1c1689b146102805761009c565b806306d78397146100a157806366fee1f5146100de5780636714530d146100fa57806388700d1c146101235780638e1da09f14610160575b600080fd5b3480156100ad57600080fd5b506100c860048036038101906100c39190612ba8565b6102a9565b6040516100d5919061301f565b60405180910390f35b6100f860048036038101906100f39190612c42565b61035c565b005b34801561010657600080fd5b50610121600480360381019061011c9190612c15565b610fde565b005b34801561012f57600080fd5b5061014a60048036038101906101459190612ba8565b611656565b6040516101579190613004565b60405180910390f35b34801561016c57600080fd5b5061018760048036038101906101829190612ba8565b611770565b604051610194919061303a565b60405180910390f35b3480156101a957600080fd5b506101c460048036038101906101bf9190612c42565b611b62565b005b3480156101d257600080fd5b506101ed60048036038101906101e89190612ba8565b612132565b005b3480156101fb57600080fd5b5061021660048036038101906102119190612c15565b61248f565b6040516102239190612e9b565b60405180910390f35b34801561023857600080fd5b50610253600480360381019061024e9190612b68565b6124c2565b604051610260919061303a565b60405180910390f35b34801561027557600080fd5b5061027e6125a0565b005b34801561028c57600080fd5b506102a760048036038101906102a29190612c42565b612633565b005b6102b161297d565b600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000838152602001908152602001600020600001604051806040016040529081600082015481526020016001820160009054906101000a900460ff16600281111561033e5761033d613312565b5b60028111156103505761034f613312565b5b81525050905092915050565b806000015181602001516000600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600083815260200190815260200160002060405180604001604052908160008201604051806040016040529081600082015481526020016001820160009054906101000a900460ff16600281111561040257610401613312565b5b600281111561041457610413613312565b5b8152505081526020016002820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152505090506000816000015160000151116104c35782826040517f6d350f220000000000000000000000000000000000000000000000000000000081526004016104ba929190612f16565b60405180910390fd5b836040015160200151600060028111156104e0576104df613312565b5b8160028111156104f3576104f2613312565b5b141580156105265750600160028111156105105761050f613312565b5b81600281111561052357610522613312565b5b14155b801561055657506002808111156105405761053f613312565b5b81600281111561055357610552613312565b5b14155b1561058d576040517f6752f48700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b84600060016000836000015173ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008360200151815260200190815260200160002060405180604001604052908160008201604051806040016040529081600082015481526020016001820160009054906101000a900460ff16600281111561063257610631613312565b5b600281111561064457610643613312565b5b8152505081526020016002820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815250509050600060028111156106b8576106b7613312565b5b82604001516020015160028111156106d3576106d2613312565b5b141561075b578060000151600001513410156107565781600001518260200151836040015160000151846040015160200151600281111561071757610716613312565b5b6040517f8bb3a8f300000000000000000000000000000000000000000000000000000000815260040161074d9493929190612f76565b60405180910390fd5b6108c6565b600060036000846040015160200151600281111561077c5761077b613312565b5b600281111561078e5761078d613312565b5b815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690508260400151600001518173ffffffffffffffffffffffffffffffffffffffff166370a08231336040518263ffffffff1660e01b81526004016108019190612e9b565b60206040518083038186803b15801561081957600080fd5b505afa15801561082d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108519190612c6f565b10156108c45782600001518360200151846040015160000151856040015160200151600281111561088557610884613312565b5b6040517f8bb3a8f30000000000000000000000000000000000000000000000000000000081526004016108bb9493929190612f76565b60405180910390fd5b505b6002600054141561090c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161090390612fbb565b60405180910390fd5b6002600081905550600080600160008a6000015173ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008a60200151815260200190815260200160002060405180604001604052908160008201604051806040016040529081600082015481526020016001820160009054906101000a900460ff1660028111156109b9576109b8613312565b5b60028111156109cb576109ca613312565b5b8152505081526020016002820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681525050905060008960000151905060006002811115610a4857610a47613312565b5b8a60400151602001516002811115610a6357610a62613312565b5b14610d3657600360008b60400151602001516002811115610a8757610a86613312565b5b6002811115610a9957610a98613312565b5b815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16925060008373ffffffffffffffffffffffffffffffffffffffff1663095ea7b384602001518d60400151600001516040518363ffffffff1660e01b8152600401610b13929190612f16565b602060405180830381600087803b158015610b2d57600080fd5b505af1158015610b41573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b659190612be8565b905080610b9e576040517ff2d5f7bf00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8373ffffffffffffffffffffffffffffffffffffffff166323b872dd33308e60400151600001516040518463ffffffff1660e01b8152600401610be393929190612edf565b602060405180830381600087803b158015610bfd57600080fd5b505af1158015610c11573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c359190612be8565b508a604001516000015160026000856020015173ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000600360008f60400151602001516002811115610ca357610ca2613312565b5b6002811115610cb557610cb4613312565b5b815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254610d2d9190613096565b92505081905550505b60006002811115610d4a57610d49613312565b5b8a60400151602001516002811115610d6557610d64613312565b5b1415610e5a573460026000846020015173ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600060036000806002811115610dc857610dc7613312565b5b6002811115610dda57610dd9613312565b5b815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254610e529190613096565b925050819055505b600160008b6000015173ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008b60200151815260200190815260200160002060008082016000808201600090556001820160006101000a81549060ff021916905550506002820160006101000a81549073ffffffffffffffffffffffffffffffffffffffff021916905550508073ffffffffffffffffffffffffffffffffffffffff166342842e0e8360200151338d602001516040518463ffffffff1660e01b8152600401610f4493929190612edf565b600060405180830381600087803b158015610f5e57600080fd5b505af1158015610f72573d6000803e3d6000fd5b505050503373ffffffffffffffffffffffffffffffffffffffff167f5a58d5efb805360c1d439380675d6b4d557bada5737540b8c2ba2b361443942e8b8460200151604051610fc2929190612fdb565b60405180910390a2505050600160008190555050505050505050565b60026000541415611024576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161101b90612fbb565b60405180910390fd5b60026000819055506000600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006003600085600281111561108657611085613312565b5b600281111561109857611097613312565b5b815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205490506000811161114957336040517f11b60bf40000000000000000000000000000000000000000000000000000000081526004016111409190612e9b565b60405180910390fd5b6000600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000600360008660028111156111a3576111a2613312565b5b60028111156111b5576111b4613312565b5b815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055506000600281111561123657611235613312565b5b82600281111561124957611248613312565b5b14156113dd5760003373ffffffffffffffffffffffffffffffffffffffff168260405161127590612e86565b60006040518083038185875af1925050503d80600081146112b2576040519150601f19603f3d011682016040523d82523d6000602084013e6112b7565b606091505b50509050806113d75781600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006003600087600281111561131957611318613312565b5b600281111561132b5761132a613312565b5b815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555033826040517f840e80d80000000000000000000000000000000000000000000000000000000081526004016113ce929190612f16565b60405180910390fd5b506115e9565b6000600360008460028111156113f6576113f5613312565b5b600281111561140857611407613312565b5b815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905060008173ffffffffffffffffffffffffffffffffffffffff1663a9059cbb33856040518363ffffffff1660e01b8152600401611476929190612eb6565b602060405180830381600087803b15801561149057600080fd5b505af11580156114a4573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906114c89190612be8565b9050806115e65782600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006003600088600281111561152857611527613312565b5b600281111561153a57611539613312565b5b815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555033836040517f840e80d80000000000000000000000000000000000000000000000000000000081526004016115dd929190612f16565b60405180910390fd5b50505b803373ffffffffffffffffffffffffffffffffffffffff167ff279e6a1f5e320cca91135676d9cb6e44ca8a08c0b88342bcdb1144f6511b56884600281111561163557611634613312565b5b604051611642919061303a565b60405180910390a350600160008190555050565b61165e6129a9565b600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600083815260200190815260200160002060405180604001604052908160008201604051806040016040529081600082015481526020016001820160009054906101000a900460ff1660028111156116f8576116f7613312565b5b600281111561170a57611709613312565b5b8152505081526020016002820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681525050905092915050565b600080600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600084815260200190815260200160002060405180604001604052908160008201604051806040016040529081600082015481526020016001820160009054906101000a900460ff16600281111561180d5761180c613312565b5b600281111561181f5761181e613312565b5b8152505081526020016002820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152505090506000806000600281111561189657611895613312565b5b83600001516020015160028111156118b1576118b0613312565b5b1415611969577f0000000000000000000000000000000000000000000000000000000000000000915060008273ffffffffffffffffffffffffffffffffffffffff1663feaf968c6040518163ffffffff1660e01b815260040160a06040518083038186803b15801561192257600080fd5b505afa158015611936573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061195a9190612c9c565b50505091505080915050611b34565b6001600281111561197d5761197c613312565b5b836000015160200151600281111561199857611997613312565b5b1415611a50577f0000000000000000000000000000000000000000000000000000000000000000915060008273ffffffffffffffffffffffffffffffffffffffff1663feaf968c6040518163ffffffff1660e01b815260040160a06040518083038186803b158015611a0957600080fd5b505afa158015611a1d573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611a419190612c9c565b50505091505080915050611b33565b600280811115611a6357611a62613312565b5b8360000151602001516002811115611a7e57611a7d613312565b5b1415611b32577f0000000000000000000000000000000000000000000000000000000000000000915060008273ffffffffffffffffffffffffffffffffffffffff1663feaf968c6040518163ffffffff1660e01b815260040160a06040518083038186803b158015611aef57600080fd5b505afa158015611b03573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611b279190612c9c565b505050915050809150505b5b5b6305f5e10081846000015160000151611b4d919061311d565b611b5791906130ec565b935050505092915050565b80600001518160200151336000600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600084815260200190815260200160002060405180604001604052908160008201604051806040016040529081600082015481526020016001820160009054906101000a900460ff166002811115611c0957611c08613312565b5b6002811115611c1b57611c1a613312565b5b8152505081526020016002820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681525050905060008160000151600001511115611ccd578383836040517f73a5c40a000000000000000000000000000000000000000000000000000000008152600401611cc493929190612f3f565b60405180910390fd5b8460000151856020015133600083905060008173ffffffffffffffffffffffffffffffffffffffff16636352211e856040518263ffffffff1660e01b8152600401611d18919061303a565b60206040518083038186803b158015611d3057600080fd5b505afa158015611d44573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611d689190612b3b565b90508273ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614611dcf576040517f94953b6000000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b89604001516020015160006002811115611dec57611deb613312565b5b816002811115611dff57611dfe613312565b5b14158015611e32575060016002811115611e1c57611e1b613312565b5b816002811115611e2f57611e2e613312565b5b14155b8015611e625750600280811115611e4c57611e4b613312565b5b816002811115611e5f57611e5e613312565b5b14155b15611e99576040517f6752f48700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60008b604001516000015111611edb576040517ffcfdbf1200000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60008b6000015190503073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1663081812fc8e602001516040518263ffffffff1660e01b8152600401611f38919061303a565b60206040518083038186803b158015611f5057600080fd5b505afa158015611f64573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611f889190612b3b565b73ffffffffffffffffffffffffffffffffffffffff1614611fd5576040517f8189633e00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60405180604001604052808d6040015181526020013373ffffffffffffffffffffffffffffffffffffffff16815250600160008e6000015173ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008e6020015181526020019081526020016000206000820151816000016000820151816000015560208201518160010160006101000a81548160ff0219169083600281111561209a57612099613312565b5b0217905550505060208201518160020160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055509050507f4ae53a3535aa51e5e1f121627676cb38488eba0ff4b93cdb333b2c8a345602038c3360405161211c929190612fdb565b60405180910390a1505050505050505050505050565b818133600083905060008173ffffffffffffffffffffffffffffffffffffffff16636352211e856040518263ffffffff1660e01b8152600401612175919061303a565b60206040518083038186803b15801561218d57600080fd5b505afa1580156121a1573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906121c59190612b3b565b90508273ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161461222c576040517f94953b6000000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b86866000600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600083815260200190815260200160002060405180604001604052908160008201604051806040016040529081600082015481526020016001820160009054906101000a900460ff1660028111156122ca576122c9613312565b5b60028111156122dc576122db613312565b5b8152505081526020016002820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681525050905060008160000151600001511161238b5782826040517f6d350f22000000000000000000000000000000000000000000000000000000008152600401612382929190612f16565b60405180910390fd5b600160008b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008a815260200190815260200160002060008082016000808201600090556001820160006101000a81549060ff021916905550506002820160006101000a81549073ffffffffffffffffffffffffffffffffffffffff021916905550503373ffffffffffffffffffffffffffffffffffffffff16898b73ffffffffffffffffffffffffffffffffffffffff167f8526cb6d400b8a551983c99e6d6fb1775b7a0deeb5d1e39d3ee65bc59e5eac2760405160405180910390a450505050505050505050565b60036020528060005260406000206000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000600260008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006003600085600281111561251c5761251b613312565b5b600281111561252e5761252d613312565b5b815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b600260005414156125e6576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016125dd90612fbb565b60405180910390fd5b600260008190555060005b6003811015612628576126158160028111156126105761260f613312565b5b610fde565b80806126209061326b565b9150506125f1565b506001600081905550565b8060000151816020015133600083905060008173ffffffffffffffffffffffffffffffffffffffff16636352211e856040518263ffffffff1660e01b815260040161267e919061303a565b60206040518083038186803b15801561269657600080fd5b505afa1580156126aa573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906126ce9190612b3b565b90508273ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614612735576040517f94953b6000000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b856000015186602001516000600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600083815260200190815260200160002060405180604001604052908160008201604051806040016040529081600082015481526020016001820160009054906101000a900460ff1660028111156127db576127da613312565b5b60028111156127ed576127ec613312565b5b8152505081526020016002820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681525050905060008160000151600001511161289c5782826040517f6d350f22000000000000000000000000000000000000000000000000000000008152600401612893929190612f16565b60405180910390fd5b8860400151600160008b6000015173ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008b6020015181526020019081526020016000206000016000820151816000015560208201518160010160006101000a81548160ff0219169083600281111561293157612930613312565b5b02179055509050507f4ae53a3535aa51e5e1f121627676cb38488eba0ff4b93cdb333b2c8a34560203893360405161296a929190612fdb565b60405180910390a1505050505050505050565b604051806040016040528060008152602001600060028111156129a3576129a2613312565b5b81525090565b60405180604001604052806129bc61297d565b8152602001600073ffffffffffffffffffffffffffffffffffffffff1681525090565b6000813590506129ee816133cb565b92915050565b600081519050612a03816133cb565b92915050565b600081519050612a18816133e2565b92915050565b600081359050612a2d816133f9565b92915050565b600081519050612a4281613409565b92915050565b600060808284031215612a5e57612a5d613370565b5b612a686060613055565b90506000612a78848285016129df565b6000830152506020612a8c84828501612afc565b6020830152506040612aa084828501612aac565b60408301525092915050565b600060408284031215612ac257612ac1613370565b5b612acc6040613055565b90506000612adc84828501612afc565b6000830152506020612af084828501612a1e565b60208301525092915050565b600081359050612b0b81613420565b92915050565b600081519050612b2081613420565b92915050565b600081519050612b3581613437565b92915050565b600060208284031215612b5157612b50613375565b5b6000612b5f848285016129f4565b91505092915050565b60008060408385031215612b7f57612b7e613375565b5b6000612b8d858286016129df565b9250506020612b9e85828601612a1e565b9150509250929050565b60008060408385031215612bbf57612bbe613375565b5b6000612bcd858286016129df565b9250506020612bde85828601612afc565b9150509250929050565b600060208284031215612bfe57612bfd613375565b5b6000612c0c84828501612a09565b91505092915050565b600060208284031215612c2b57612c2a613375565b5b6000612c3984828501612a1e565b91505092915050565b600060808284031215612c5857612c57613375565b5b6000612c6684828501612a48565b91505092915050565b600060208284031215612c8557612c84613375565b5b6000612c9384828501612b11565b91505092915050565b600080600080600060a08688031215612cb857612cb7613375565b5b6000612cc688828901612b26565b9550506020612cd788828901612a33565b9450506040612ce888828901612b11565b9350506060612cf988828901612b11565b9250506080612d0a88828901612b26565b9150509295509295909350565b612d20816131f2565b82525050565b612d2f81613177565b82525050565b612d3e81613177565b82525050565b612d4d81613204565b82525050565b6000612d6060008361307a565b9150612d6b8261338b565b600082019050919050565b6000612d83601f83613085565b9150612d8e8261338e565b602082019050919050565b608082016000820151612daf6000850182612d26565b506020820151612dc26020850182612e68565b506040820151612dd56040850182612e0a565b50505050565b606082016000820151612df16000850182612e0a565b506020820151612e046040850182612d26565b50505050565b604082016000820151612e206000850182612e68565b506020820151612e336020850182612d44565b50505050565b604082016000820151612e4f6000850182612e68565b506020820151612e626020850182612d44565b50505050565b612e71816131d2565b82525050565b612e80816131d2565b82525050565b6000612e9182612d53565b9150819050919050565b6000602082019050612eb06000830184612d35565b92915050565b6000604082019050612ecb6000830185612d17565b612ed86020830184612e77565b9392505050565b6000606082019050612ef46000830186612d35565b612f016020830185612d35565b612f0e6040830184612e77565b949350505050565b6000604082019050612f2b6000830185612d35565b612f386020830184612e77565b9392505050565b6000606082019050612f546000830186612d35565b612f616020830185612e77565b612f6e6040830184612d35565b949350505050565b6000608082019050612f8b6000830187612d35565b612f986020830186612e77565b612fa56040830185612e77565b612fb26060830184612e77565b95945050505050565b60006020820190508181036000830152612fd481612d76565b9050919050565b600060a082019050612ff06000830185612d99565b612ffd6080830184612d35565b9392505050565b60006060820190506130196000830184612ddb565b92915050565b60006040820190506130346000830184612e39565b92915050565b600060208201905061304f6000830184612e77565b92915050565b600061305f613070565b905061306b828261323a565b919050565b6000604051905090565b600081905092915050565b600082825260208201905092915050565b60006130a1826131d2565b91506130ac836131d2565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff038211156130e1576130e06132b4565b5b828201905092915050565b60006130f7826131d2565b9150613102836131d2565b925082613112576131116132e3565b5b828204905092915050565b6000613128826131d2565b9150613133836131d2565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff048311821515161561316c5761316b6132b4565b5b828202905092915050565b6000613182826131b2565b9050919050565b60008115159050919050565b60008190506131a3826133b7565b919050565b6000819050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b600069ffffffffffffffffffff82169050919050565b60006131fd82613216565b9050919050565b600061320f82613195565b9050919050565b600061322182613228565b9050919050565b6000613233826131b2565b9050919050565b6132438261337a565b810181811067ffffffffffffffff8211171561326257613261613341565b5b80604052505050565b6000613276826131d2565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8214156132a9576132a86132b4565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600080fd5b600080fd5b6000601f19601f8301169050919050565b50565b7f5265656e7472616e637947756172643a207265656e7472616e742063616c6c00600082015250565b600381106133c8576133c7613312565b5b50565b6133d481613177565b81146133df57600080fd5b50565b6133eb81613189565b81146133f657600080fd5b50565b6003811061340657600080fd5b50565b613412816131a8565b811461341d57600080fd5b50565b613429816131d2565b811461343457600080fd5b50565b613440816131dc565b811461344b57600080fd5b5056fea2646970667358221220e97a41ad2327d144a81383baeca1294bb4a44763afc85c7f31884d9dc09f9c8d64736f6c63430008070033";

type NftMarketplaceChallengeConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: NftMarketplaceChallengeConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class NftMarketplaceChallenge__factory extends ContractFactory {
  constructor(...args: NftMarketplaceChallengeConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _daiAddress: PromiseOrValue<string>,
    _usdcAddress: PromiseOrValue<string>,
    _ethPriceFeed: PromiseOrValue<string>,
    _daiPricefeed: PromiseOrValue<string>,
    _usdcPricefeed: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<NftMarketplaceChallenge> {
    return super.deploy(
      _daiAddress,
      _usdcAddress,
      _ethPriceFeed,
      _daiPricefeed,
      _usdcPricefeed,
      overrides || {}
    ) as Promise<NftMarketplaceChallenge>;
  }
  override getDeployTransaction(
    _daiAddress: PromiseOrValue<string>,
    _usdcAddress: PromiseOrValue<string>,
    _ethPriceFeed: PromiseOrValue<string>,
    _daiPricefeed: PromiseOrValue<string>,
    _usdcPricefeed: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _daiAddress,
      _usdcAddress,
      _ethPriceFeed,
      _daiPricefeed,
      _usdcPricefeed,
      overrides || {}
    );
  }
  override attach(address: string): NftMarketplaceChallenge {
    return super.attach(address) as NftMarketplaceChallenge;
  }
  override connect(signer: Signer): NftMarketplaceChallenge__factory {
    return super.connect(signer) as NftMarketplaceChallenge__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): NftMarketplaceChallengeInterface {
    return new utils.Interface(_abi) as NftMarketplaceChallengeInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): NftMarketplaceChallenge {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as NftMarketplaceChallenge;
  }
}
