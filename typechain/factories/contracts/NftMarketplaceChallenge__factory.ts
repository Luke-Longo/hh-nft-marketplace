/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../common";
import type {
  NftMarketplaceChallenge,
  NftMarketplaceChallengeInterface,
} from "../../contracts/NftMarketplaceChallenge";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_daiAddress",
        type: "address",
      },
      {
        internalType: "address",
        name: "_usdcAddress",
        type: "address",
      },
      {
        internalType: "address",
        name: "_ethPriceFeed",
        type: "address",
      },
      {
        internalType: "address",
        name: "_daiPricefeed",
        type: "address",
      },
      {
        internalType: "address",
        name: "_usdcPricefeed",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "NftMarketplace__ERC20ApproveFailed",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "nftAddress",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "NftMarketplace__NftAlreadyListed",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "withdrawer",
        type: "address",
      },
    ],
    name: "NftMarketplace__NoProceeds",
    type: "error",
  },
  {
    inputs: [],
    name: "NftMarketplace__NotApproved",
    type: "error",
  },
  {
    inputs: [],
    name: "NftMarketplace__NotApprovedToken",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "nftAddress",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "NftMarketplace__NotListed",
    type: "error",
  },
  {
    inputs: [],
    name: "NftMarketplace__NotOwner",
    type: "error",
  },
  {
    inputs: [],
    name: "NftMarketplace__PriceMustBeGreaterThanZero",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "nftAddress",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "price",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "token",
        type: "uint256",
      },
    ],
    name: "NftMarketplace__PriceNotMet",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "withdrawer",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "NftMarketplace__WithdrawFailed",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "nftAddress",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "tokenId",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "amount",
            type: "uint256",
          },
          {
            internalType: "enum NftMarketplaceChallenge.Token",
            name: "token",
            type: "uint8",
          },
        ],
        indexed: false,
        internalType: "struct NftMarketplaceChallenge.ListingParams",
        name: "listingParams",
        type: "tuple",
      },
      {
        indexed: true,
        internalType: "address",
        name: "buyer",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "seller",
        type: "address",
      },
    ],
    name: "ItemBought",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "nftAddress",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "tokenId",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "amount",
            type: "uint256",
          },
          {
            internalType: "enum NftMarketplaceChallenge.Token",
            name: "token",
            type: "uint8",
          },
        ],
        indexed: false,
        internalType: "struct NftMarketplaceChallenge.ListingParams",
        name: "listingParams",
        type: "tuple",
      },
      {
        indexed: false,
        internalType: "address",
        name: "seller",
        type: "address",
      },
    ],
    name: "ItemListed",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "nftAddress",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "address",
        name: "seller",
        type: "address",
      },
    ],
    name: "ListingCancelled",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "withdrawer",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "token",
        type: "uint256",
      },
    ],
    name: "Withdraw",
    type: "event",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "nftAddress",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "tokenId",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "amount",
            type: "uint256",
          },
          {
            internalType: "enum NftMarketplaceChallenge.Token",
            name: "token",
            type: "uint8",
          },
        ],
        internalType: "struct NftMarketplaceChallenge.ListingParams",
        name: "listingParams",
        type: "tuple",
      },
    ],
    name: "buyItem",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "nftAddress",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "cancelListing",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "getDaiPriceFeed",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getDaiToken",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getEthPriceFeed",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "nftAddress",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "getListing",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "amount",
            type: "uint256",
          },
          {
            internalType: "enum NftMarketplaceChallenge.Token",
            name: "token",
            type: "uint8",
          },
          {
            internalType: "address",
            name: "seller",
            type: "address",
          },
        ],
        internalType: "struct NftMarketplaceChallenge.Listing",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "nftAddress",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "getListingPriceUsd",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        internalType: "enum NftMarketplaceChallenge.Token",
        name: "token",
        type: "uint8",
      },
    ],
    name: "getProceeds",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getProceedsAll",
    outputs: [
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getUsdcPriceFeed",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getUsdcToken",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "nftAddress",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "tokenId",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "amount",
            type: "uint256",
          },
          {
            internalType: "enum NftMarketplaceChallenge.Token",
            name: "token",
            type: "uint8",
          },
        ],
        internalType: "struct NftMarketplaceChallenge.ListingParams",
        name: "listingParams",
        type: "tuple",
      },
    ],
    name: "listItem",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "enum NftMarketplaceChallenge.Token",
        name: "",
        type: "uint8",
      },
    ],
    name: "tokenAddresses",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "nftAddress",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "tokenId",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "amount",
            type: "uint256",
          },
          {
            internalType: "enum NftMarketplaceChallenge.Token",
            name: "token",
            type: "uint8",
          },
        ],
        internalType: "struct NftMarketplaceChallenge.ListingParams",
        name: "listingParams",
        type: "tuple",
      },
    ],
    name: "updateListing",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "enum NftMarketplaceChallenge.Token",
        name: "token",
        type: "uint8",
      },
    ],
    name: "withdrawSingleProceeds",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60e06040523480156200001157600080fd5b5060405162003c7738038062003c7783398181016040528101906200003791906200027c565b60016000819055506000600360008060028111156200005b576200005a62000338565b5b600281111562000070576200006f62000338565b5b815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550846003600060016002811115620000d857620000d762000338565b5b6002811115620000ed57620000ec62000338565b5b815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550836003600060028081111562000154576200015362000338565b5b600281111562000169576200016862000338565b5b815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508273ffffffffffffffffffffffffffffffffffffffff1660808173ffffffffffffffffffffffffffffffffffffffff1660601b815250508173ffffffffffffffffffffffffffffffffffffffff1660a08173ffffffffffffffffffffffffffffffffffffffff1660601b815250508073ffffffffffffffffffffffffffffffffffffffff1660c08173ffffffffffffffffffffffffffffffffffffffff1660601b81525050505050505062000386565b60008151905062000276816200036c565b92915050565b600080600080600060a086880312156200029b576200029a62000367565b5b6000620002ab8882890162000265565b9550506020620002be8882890162000265565b9450506040620002d18882890162000265565b9350506060620002e48882890162000265565b9250506080620002f78882890162000265565b9150509295509295909350565b6000620003118262000318565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b600080fd5b620003778162000304565b81146200038357600080fd5b50565b60805160601c60a05160601c60c05160601c6138a3620003d4600039600081816119bc0152611a980152600081816118da0152611e860152600081816117f70152611b2001526138a36000f3fe6080604052600436106100e85760003560e01c8063a50f713b1161008a578063b7b93b8111610059578063b7b93b81146102e2578063b9f4592a1461030d578063cf0d743714610329578063d794bb2814610366576100e8565b8063a50f713b14610238578063a7db80cc14610263578063afa7d1f01461028e578063b2ddee06146102b9576100e8565b8063716756a0116100c6578063716756a01461016c578063760442b41461019557806388700d1c146101be5780638e1da09f146101fb576100e8565b80633b44390a146100ed578063652fd7d2146101185780636714530d14610143575b600080fd5b3480156100f957600080fd5b506101026103a3565b60405161010f91906131c1565b60405180910390f35b34801561012457600080fd5b5061012d610402565b60405161013a91906132e1565b60405180910390f35b34801561014f57600080fd5b5061016a60048036038101906101659190612ec4565b61057e565b005b34801561017857600080fd5b50610193600480360381019061018e9190612ef1565b610bf6565b005b3480156101a157600080fd5b506101bc60048036038101906101b79190612ef1565b6111b7565b005b3480156101ca57600080fd5b506101e560048036038101906101e09190612e57565b6115c0565b6040516101f29190613398565b60405180910390f35b34801561020757600080fd5b50610222600480360381019061021d9190612e57565b6116c6565b60405161022f91906133b3565b60405180910390f35b34801561024457600080fd5b5061024d611a94565b60405161025a91906131c1565b60405180910390f35b34801561026f57600080fd5b50610278611abc565b60405161028591906131c1565b60405180910390f35b34801561029a57600080fd5b506102a3611b1c565b6040516102b091906131c1565b60405180910390f35b3480156102c557600080fd5b506102e060048036038101906102db9190612e57565b611b44565b005b3480156102ee57600080fd5b506102f7611e82565b60405161030491906131c1565b60405180910390f35b61032760048036038101906103229190612ef1565b611eaa565b005b34801561033557600080fd5b50610350600480360381019061034b9190612ec4565b612aa5565b60405161035d91906131c1565b60405180910390f35b34801561037257600080fd5b5061038d60048036038101906103889190612e17565b612ad8565b60405161039a91906133b3565b60405180910390f35b6000600360006002808111156103bc576103bb613702565b5b60028111156103ce576103cd613702565b5b815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b60606000600367ffffffffffffffff81111561042157610420613760565b5b60405190808252806020026020018201604052801561044f5781602001602082028036833780820191505090505b50905060005b600381101561057657600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000600360008460028111156104b6576104b5613702565b5b60028111156104c8576104c7613702565b5b60028111156104da576104d9613702565b5b815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205482828151811061055757610556613731565b5b602002602001018181525050808061056e9061365b565b915050610455565b508091505090565b600260005414156105c4576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105bb9061334f565b60405180910390fd5b60026000819055506000600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006003600085600281111561062657610625613702565b5b600281111561063857610637613702565b5b815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050600081116106e957336040517f11b60bf40000000000000000000000000000000000000000000000000000000081526004016106e091906131c1565b60405180910390fd5b6000600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006003600086600281111561074357610742613702565b5b600281111561075557610754613702565b5b815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550600060028111156107d6576107d5613702565b5b8260028111156107e9576107e8613702565b5b141561097d5760003373ffffffffffffffffffffffffffffffffffffffff1682604051610815906131ac565b60006040518083038185875af1925050503d8060008114610852576040519150601f19603f3d011682016040523d82523d6000602084013e610857565b606091505b50509050806109775781600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000600360008760028111156108b9576108b8613702565b5b60028111156108cb576108ca613702565b5b815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555033826040517f840e80d800000000000000000000000000000000000000000000000000000000815260040161096e92919061323c565b60405180910390fd5b50610b89565b60006003600084600281111561099657610995613702565b5b60028111156109a8576109a7613702565b5b815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905060008173ffffffffffffffffffffffffffffffffffffffff1663a9059cbb33856040518363ffffffff1660e01b8152600401610a169291906131dc565b602060405180830381600087803b158015610a3057600080fd5b505af1158015610a44573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a689190612e97565b905080610b865782600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600060036000886002811115610ac857610ac7613702565b5b6002811115610ada57610ad9613702565b5b815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555033836040517f840e80d8000000000000000000000000000000000000000000000000000000008152600401610b7d92919061323c565b60405180910390fd5b50505b803373ffffffffffffffffffffffffffffffffffffffff167ff279e6a1f5e320cca91135676d9cb6e44ca8a08c0b88342bcdb1144f6511b568846002811115610bd557610bd4613702565b5b604051610be291906133b3565b60405180910390a350600160008190555050565b80600001518160200151336000600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000848152602001908152602001600020604051806060016040529081600082015481526020016001820160009054906101000a900460ff166002811115610c8d57610c8c613702565b5b6002811115610c9f57610c9e613702565b5b81526020016001820160019054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815250509050600081600001511115610d49578383836040517f73a5c40a000000000000000000000000000000000000000000000000000000008152600401610d4093929190613265565b60405180910390fd5b8460000151856020015133600083905060008173ffffffffffffffffffffffffffffffffffffffff16636352211e856040518263ffffffff1660e01b8152600401610d9491906133b3565b60206040518083038186803b158015610dac57600080fd5b505afa158015610dc0573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610de49190612dea565b90508273ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614610e4b576040517f94953b6000000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b896060015160006002811115610e6457610e63613702565b5b816002811115610e7757610e76613702565b5b14158015610eaa575060016002811115610e9457610e93613702565b5b816002811115610ea757610ea6613702565b5b14155b8015610eda5750600280811115610ec457610ec3613702565b5b816002811115610ed757610ed6613702565b5b14155b15610f11576040517f6752f48700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60008b6040015111610f4f576040517ffcfdbf1200000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60008b6000015190503073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1663081812fc8e602001516040518263ffffffff1660e01b8152600401610fac91906133b3565b60206040518083038186803b158015610fc457600080fd5b505afa158015610fd8573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610ffc9190612dea565b73ffffffffffffffffffffffffffffffffffffffff1614611049576040517f8189633e00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60405180606001604052808d6040015181526020018d60600151600281111561107557611074613702565b5b81526020013373ffffffffffffffffffffffffffffffffffffffff16815250600160008e6000015173ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008e6020015181526020019081526020016000206000820151816000015560208201518160010160006101000a81548160ff0219169083600281111561112157611120613702565b5b021790555060408201518160010160016101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055509050507f914a85a8f3e93993be44b18b0243fa53b57b213b30bfbfcb836cceffb35209fd8c336040516111a192919061336f565b60405180910390a1505050505050505050505050565b8060000151816020015133600083905060008173ffffffffffffffffffffffffffffffffffffffff16636352211e856040518263ffffffff1660e01b815260040161120291906133b3565b60206040518083038186803b15801561121a57600080fd5b505afa15801561122e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906112529190612dea565b90508273ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16146112b9576040517f94953b6000000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b856000015186602001516000600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000838152602001908152602001600020604051806060016040529081600082015481526020016001820160009054906101000a900460ff16600281111561134f5761134e613702565b5b600281111561136157611360613702565b5b81526020016001820160019054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681525050905060008160000151116114085782826040517f6d350f220000000000000000000000000000000000000000000000000000000081526004016113ff92919061323c565b60405180910390fd5b6114556040518060400160405280601281526020017f7570646174696e67206c697374696e673a2000000000000000000000000000008152508a600001518b602001518c60400151612bb6565b60405180606001604052808a6040015181526020018a60600151600281111561148157611480613702565b5b81526020013373ffffffffffffffffffffffffffffffffffffffff16815250600160008b6000015173ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008b6020015181526020019081526020016000206000820151816000015560208201518160010160006101000a81548160ff0219169083600281111561152d5761152c613702565b5b021790555060408201518160010160016101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055509050507f914a85a8f3e93993be44b18b0243fa53b57b213b30bfbfcb836cceffb35209fd89336040516115ad92919061336f565b60405180910390a1505050505050505050565b6115c8612c81565b600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000838152602001908152602001600020604051806060016040529081600082015481526020016001820160009054906101000a900460ff16600281111561165257611651613702565b5b600281111561166457611663613702565b5b81526020016001820160019054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681525050905092915050565b600080600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000848152602001908152602001600020604051806060016040529081600082015481526020016001820160009054906101000a900460ff16600281111561175357611752613702565b5b600281111561176557611764613702565b5b81526020016001820160019054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815250509050600080600060028111156117d8576117d7613702565b5b836020015160028111156117ef576117ee613702565b5b14156118a7577f0000000000000000000000000000000000000000000000000000000000000000915060008273ffffffffffffffffffffffffffffffffffffffff1663feaf968c6040518163ffffffff1660e01b815260040160a06040518083038186803b15801561186057600080fd5b505afa158015611874573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906118989190612f4b565b50505091505080915050611a6a565b600160028111156118bb576118ba613702565b5b836020015160028111156118d2576118d1613702565b5b141561198a577f0000000000000000000000000000000000000000000000000000000000000000915060008273ffffffffffffffffffffffffffffffffffffffff1663feaf968c6040518163ffffffff1660e01b815260040160a06040518083038186803b15801561194357600080fd5b505afa158015611957573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061197b9190612f4b565b50505091505080915050611a69565b60028081111561199d5761199c613702565b5b836020015160028111156119b4576119b3613702565b5b1415611a68577f0000000000000000000000000000000000000000000000000000000000000000915060008273ffffffffffffffffffffffffffffffffffffffff1663feaf968c6040518163ffffffff1660e01b815260040160a06040518083038186803b158015611a2557600080fd5b505afa158015611a39573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611a5d9190612f4b565b505050915050809150505b5b5b6305f5e100818460000151611a7f91906134da565b611a8991906134a9565b935050505092915050565b60007f0000000000000000000000000000000000000000000000000000000000000000905090565b60006003600060016002811115611ad657611ad5613702565b5b6002811115611ae857611ae7613702565b5b815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b60007f0000000000000000000000000000000000000000000000000000000000000000905090565b818133600083905060008173ffffffffffffffffffffffffffffffffffffffff16636352211e856040518263ffffffff1660e01b8152600401611b8791906133b3565b60206040518083038186803b158015611b9f57600080fd5b505afa158015611bb3573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611bd79190612dea565b90508273ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614611c3e576040517f94953b6000000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b86866000600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000838152602001908152602001600020604051806060016040529081600082015481526020016001820160009054906101000a900460ff166002811115611ccc57611ccb613702565b5b6002811115611cde57611cdd613702565b5b81526020016001820160019054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152505090506000816000015111611d855782826040517f6d350f22000000000000000000000000000000000000000000000000000000008152600401611d7c92919061323c565b60405180910390fd5b600160008b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008a81526020019081526020016000206000808201600090556001820160006101000a81549060ff02191690556001820160016101000a81549073ffffffffffffffffffffffffffffffffffffffff021916905550503373ffffffffffffffffffffffffffffffffffffffff16898b73ffffffffffffffffffffffffffffffffffffffff167f8526cb6d400b8a551983c99e6d6fb1775b7a0deeb5d1e39d3ee65bc59e5eac2760405160405180910390a450505050505050505050565b60007f0000000000000000000000000000000000000000000000000000000000000000905090565b806000015181602001516000600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000838152602001908152602001600020604051806060016040529081600082015481526020016001820160009054906101000a900460ff166002811115611f4057611f3f613702565b5b6002811115611f5257611f51613702565b5b81526020016001820160019054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152505090506000816000015111611ff95782826040517f6d350f22000000000000000000000000000000000000000000000000000000008152600401611ff092919061323c565b60405180910390fd5b83606001516000600281111561201257612011613702565b5b81600281111561202557612024613702565b5b1415801561205857506001600281111561204257612041613702565b5b81600281111561205557612054613702565b5b14155b8015612088575060028081111561207257612071613702565b5b81600281111561208557612084613702565b5b14155b156120bf576040517f6752f48700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b84600060016000836000015173ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600083602001518152602001908152602001600020604051806060016040529081600082015481526020016001820160009054906101000a900460ff16600281111561215457612153613702565b5b600281111561216657612165613702565b5b81526020016001820160019054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815250509050600060028111156121d6576121d5613702565b5b826060015160028111156121ed576121ec613702565b5b1415612269578060000151341015612264578160000151826020015183604001518460600151600281111561222557612224613702565b5b6040517f8bb3a8f300000000000000000000000000000000000000000000000000000000815260040161225b949392919061329c565b60405180910390fd5b6123c4565b6000600360008460600151600281111561228657612285613702565b5b600281111561229857612297613702565b5b815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905082604001518173ffffffffffffffffffffffffffffffffffffffff166370a08231336040518263ffffffff1660e01b815260040161230791906131c1565b60206040518083038186803b15801561231f57600080fd5b505afa158015612333573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906123579190612f1e565b10156123c2578260000151836020015184604001518560600151600281111561238357612382613702565b5b6040517f8bb3a8f30000000000000000000000000000000000000000000000000000000081526004016123b9949392919061329c565b60405180910390fd5b505b6002600054141561240a576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016124019061334f565b60405180910390fd5b6002600081905550600080600160008a6000015173ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008a602001518152602001908152602001600020604051806060016040529081600082015481526020016001820160009054906101000a900460ff1660028111156124a7576124a6613702565b5b60028111156124b9576124b8613702565b5b81526020016001820160019054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152505090506000896000015190506000600281111561253257612531613702565b5b8a60600151600281111561254957612548613702565b5b1461280857600360008b60600151600281111561256957612568613702565b5b600281111561257b5761257a613702565b5b815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16925060008373ffffffffffffffffffffffffffffffffffffffff1663095ea7b384604001518d604001516040518363ffffffff1660e01b81526004016125f192919061323c565b602060405180830381600087803b15801561260b57600080fd5b505af115801561261f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906126439190612e97565b90508061267c576040517ff2d5f7bf00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8373ffffffffffffffffffffffffffffffffffffffff166323b872dd33308e604001516040518463ffffffff1660e01b81526004016126bd93929190613205565b602060405180830381600087803b1580156126d757600080fd5b505af11580156126eb573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061270f9190612e97565b508a6040015160026000856040015173ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000600360008f60600151600281111561277557612774613702565b5b600281111561278757612786613702565b5b815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546127ff9190613453565b92505081905550505b6000600281111561281c5761281b613702565b5b8a60600151600281111561283357612832613702565b5b1415612928573460026000846040015173ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006003600080600281111561289657612895613702565b5b60028111156128a8576128a7613702565b5b815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546129209190613453565b925050819055505b600160008b6000015173ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008b6020015181526020019081526020016000206000808201600090556001820160006101000a81549060ff02191690556001820160016101000a81549073ffffffffffffffffffffffffffffffffffffffff021916905550508073ffffffffffffffffffffffffffffffffffffffff166342842e0e8360400151338d602001516040518463ffffffff1660e01b8152600401612a0b93929190613205565b600060405180830381600087803b158015612a2557600080fd5b505af1158015612a39573d6000803e3d6000fd5b505050503373ffffffffffffffffffffffffffffffffffffffff167fdf06aeef8b2f256f0f2bc5dc1205023cd9e2ae2e5e46996063f91bdcd755dd828b8460400151604051612a8992919061336f565b60405180910390a2505050600160008190555050505050505050565b60036020528060005260406000206000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000600260008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600060036000856002811115612b3257612b31613702565b5b6002811115612b4457612b43613702565b5b815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b612c5284848484604051602401612bd09493929190613303565b6040516020818303038152906040527ff8f51b1e000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff8381831617835250505050612c58565b50505050565b60008151905060006a636f6e736f6c652e6c6f679050602083016000808483855afa5050505050565b60405180606001604052806000815260200160006002811115612ca757612ca6613702565b5b8152602001600073ffffffffffffffffffffffffffffffffffffffff1681525090565b600081359050612cd9816137ea565b92915050565b600081519050612cee816137ea565b92915050565b600081519050612d0381613801565b92915050565b600081359050612d1881613818565b92915050565b600081519050612d2d81613828565b92915050565b600060808284031215612d4957612d4861378f565b5b612d5360806133ce565b90506000612d6384828501612cca565b6000830152506020612d7784828501612dab565b6020830152506040612d8b84828501612dab565b6040830152506060612d9f84828501612d09565b60608301525092915050565b600081359050612dba8161383f565b92915050565b600081519050612dcf8161383f565b92915050565b600081519050612de481613856565b92915050565b600060208284031215612e0057612dff613794565b5b6000612e0e84828501612cdf565b91505092915050565b60008060408385031215612e2e57612e2d613794565b5b6000612e3c85828601612cca565b9250506020612e4d85828601612d09565b9150509250929050565b60008060408385031215612e6e57612e6d613794565b5b6000612e7c85828601612cca565b9250506020612e8d85828601612dab565b9150509250929050565b600060208284031215612ead57612eac613794565b5b6000612ebb84828501612cf4565b91505092915050565b600060208284031215612eda57612ed9613794565b5b6000612ee884828501612d09565b91505092915050565b600060808284031215612f0757612f06613794565b5b6000612f1584828501612d33565b91505092915050565b600060208284031215612f3457612f33613794565b5b6000612f4284828501612dc0565b91505092915050565b600080600080600060a08688031215612f6757612f66613794565b5b6000612f7588828901612dd5565b9550506020612f8688828901612d1e565b9450506040612f9788828901612dc0565b9350506060612fa888828901612dc0565b9250506080612fb988828901612dd5565b9150509295509295909350565b6000612fd2838361318e565b60208301905092915050565b612fe7816135af565b82525050565b612ff681613534565b82525050565b61300581613534565b82525050565b600061301682613403565b6130208185613426565b935061302b836133f3565b8060005b8381101561305c5781516130438882612fc6565b975061304e83613419565b92505060018101905061302f565b5085935050505092915050565b613072816135c1565b82525050565b60006130838261340e565b61308d8185613442565b935061309d8185602086016135f7565b6130a681613799565b840191505092915050565b60006130be600083613437565b91506130c9826137aa565b600082019050919050565b60006130e1601f83613442565b91506130ec826137ad565b602082019050919050565b60808201600082015161310d6000850182612fed565b506020820151613120602085018261318e565b506040820151613133604085018261318e565b5060608201516131466060850182613069565b50505050565b606082016000820151613162600085018261318e565b5060208201516131756020850182613069565b5060408201516131886040850182612fed565b50505050565b6131978161358f565b82525050565b6131a68161358f565b82525050565b60006131b7826130b1565b9150819050919050565b60006020820190506131d66000830184612ffc565b92915050565b60006040820190506131f16000830185612fde565b6131fe602083018461319d565b9392505050565b600060608201905061321a6000830186612ffc565b6132276020830185612ffc565b613234604083018461319d565b949350505050565b60006040820190506132516000830185612ffc565b61325e602083018461319d565b9392505050565b600060608201905061327a6000830186612ffc565b613287602083018561319d565b6132946040830184612ffc565b949350505050565b60006080820190506132b16000830187612ffc565b6132be602083018661319d565b6132cb604083018561319d565b6132d8606083018461319d565b95945050505050565b600060208201905081810360008301526132fb818461300b565b905092915050565b6000608082019050818103600083015261331d8187613078565b905061332c6020830186612ffc565b613339604083018561319d565b613346606083018461319d565b95945050505050565b60006020820190508181036000830152613368816130d4565b9050919050565b600060a08201905061338460008301856130f7565b6133916080830184612ffc565b9392505050565b60006060820190506133ad600083018461314c565b92915050565b60006020820190506133c8600083018461319d565b92915050565b60006133d86133e9565b90506133e4828261362a565b919050565b6000604051905090565b6000819050602082019050919050565b600081519050919050565b600081519050919050565b6000602082019050919050565b600082825260208201905092915050565b600081905092915050565b600082825260208201905092915050565b600061345e8261358f565b91506134698361358f565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0382111561349e5761349d6136a4565b5b828201905092915050565b60006134b48261358f565b91506134bf8361358f565b9250826134cf576134ce6136d3565b5b828204905092915050565b60006134e58261358f565b91506134f08361358f565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615613529576135286136a4565b5b828202905092915050565b600061353f8261356f565b9050919050565b60008115159050919050565b6000819050613560826137d6565b919050565b6000819050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b600069ffffffffffffffffffff82169050919050565b60006135ba826135d3565b9050919050565b60006135cc82613552565b9050919050565b60006135de826135e5565b9050919050565b60006135f08261356f565b9050919050565b60005b838110156136155780820151818401526020810190506135fa565b83811115613624576000848401525b50505050565b61363382613799565b810181811067ffffffffffffffff8211171561365257613651613760565b5b80604052505050565b60006136668261358f565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff821415613699576136986136a4565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600080fd5b600080fd5b6000601f19601f8301169050919050565b50565b7f5265656e7472616e637947756172643a207265656e7472616e742063616c6c00600082015250565b600381106137e7576137e6613702565b5b50565b6137f381613534565b81146137fe57600080fd5b50565b61380a81613546565b811461381557600080fd5b50565b6003811061382557600080fd5b50565b61383181613565565b811461383c57600080fd5b50565b6138488161358f565b811461385357600080fd5b50565b61385f81613599565b811461386a57600080fd5b5056fea26469706673582212201a6322c08a40274054cd98158988e2f1f11604c179d4b8fe13c6c54690feafc464736f6c63430008070033";

type NftMarketplaceChallengeConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: NftMarketplaceChallengeConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class NftMarketplaceChallenge__factory extends ContractFactory {
  constructor(...args: NftMarketplaceChallengeConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _daiAddress: PromiseOrValue<string>,
    _usdcAddress: PromiseOrValue<string>,
    _ethPriceFeed: PromiseOrValue<string>,
    _daiPricefeed: PromiseOrValue<string>,
    _usdcPricefeed: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<NftMarketplaceChallenge> {
    return super.deploy(
      _daiAddress,
      _usdcAddress,
      _ethPriceFeed,
      _daiPricefeed,
      _usdcPricefeed,
      overrides || {}
    ) as Promise<NftMarketplaceChallenge>;
  }
  override getDeployTransaction(
    _daiAddress: PromiseOrValue<string>,
    _usdcAddress: PromiseOrValue<string>,
    _ethPriceFeed: PromiseOrValue<string>,
    _daiPricefeed: PromiseOrValue<string>,
    _usdcPricefeed: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _daiAddress,
      _usdcAddress,
      _ethPriceFeed,
      _daiPricefeed,
      _usdcPricefeed,
      overrides || {}
    );
  }
  override attach(address: string): NftMarketplaceChallenge {
    return super.attach(address) as NftMarketplaceChallenge;
  }
  override connect(signer: Signer): NftMarketplaceChallenge__factory {
    return super.connect(signer) as NftMarketplaceChallenge__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): NftMarketplaceChallengeInterface {
    return new utils.Interface(_abi) as NftMarketplaceChallengeInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): NftMarketplaceChallenge {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as NftMarketplaceChallenge;
  }
}
