/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../common";
import type {
  NftMarketplaceChallenge,
  NftMarketplaceChallengeInterface,
} from "../../contracts/NftMarketplaceChallenge";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_daiAddress",
        type: "address",
      },
      {
        internalType: "address",
        name: "_usdcAddress",
        type: "address",
      },
      {
        internalType: "address",
        name: "_ethPriceFeed",
        type: "address",
      },
      {
        internalType: "address",
        name: "_daiPricefeed",
        type: "address",
      },
      {
        internalType: "address",
        name: "_usdcPricefeed",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "NftMarketplace__ERC20ApproveFailed",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "nftAddress",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "NftMarketplace__NftAlreadyListed",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "withdrawer",
        type: "address",
      },
    ],
    name: "NftMarketplace__NoProceeds",
    type: "error",
  },
  {
    inputs: [],
    name: "NftMarketplace__NotApproved",
    type: "error",
  },
  {
    inputs: [],
    name: "NftMarketplace__NotApprovedToken",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "nftAddress",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "NftMarketplace__NotListed",
    type: "error",
  },
  {
    inputs: [],
    name: "NftMarketplace__NotOwner",
    type: "error",
  },
  {
    inputs: [],
    name: "NftMarketplace__PriceMustBeGreaterThanZero",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "nftAddress",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "price",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "token",
        type: "uint256",
      },
    ],
    name: "NftMarketplace__PriceNotMet",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "withdrawer",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "NftMarketplace__WithdrawFailed",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "nftAddress",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "tokenId",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "amount",
            type: "uint256",
          },
          {
            internalType: "enum NftMarketplaceChallenge.Token",
            name: "token",
            type: "uint8",
          },
        ],
        indexed: false,
        internalType: "struct NftMarketplaceChallenge.ListingParams",
        name: "listingParams",
        type: "tuple",
      },
      {
        indexed: true,
        internalType: "address",
        name: "buyer",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "seller",
        type: "address",
      },
    ],
    name: "ItemBought",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "nftAddress",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "tokenId",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "amount",
            type: "uint256",
          },
          {
            internalType: "enum NftMarketplaceChallenge.Token",
            name: "token",
            type: "uint8",
          },
        ],
        indexed: false,
        internalType: "struct NftMarketplaceChallenge.ListingParams",
        name: "listingParams",
        type: "tuple",
      },
      {
        indexed: false,
        internalType: "address",
        name: "seller",
        type: "address",
      },
    ],
    name: "ItemListed",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "nftAddress",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "address",
        name: "seller",
        type: "address",
      },
    ],
    name: "ListingCancelled",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "withdrawer",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "token",
        type: "uint256",
      },
    ],
    name: "Withdraw",
    type: "event",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "nftAddress",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "tokenId",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "amount",
            type: "uint256",
          },
          {
            internalType: "enum NftMarketplaceChallenge.Token",
            name: "token",
            type: "uint8",
          },
        ],
        internalType: "struct NftMarketplaceChallenge.ListingParams",
        name: "listingParams",
        type: "tuple",
      },
    ],
    name: "buyItem",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "nftAddress",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "cancelListing",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "getDaiPriceFeed",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getDaiToken",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getEthPriceFeed",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "nftAddress",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "getListing",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "amount",
            type: "uint256",
          },
          {
            internalType: "enum NftMarketplaceChallenge.Token",
            name: "token",
            type: "uint8",
          },
          {
            internalType: "address",
            name: "seller",
            type: "address",
          },
        ],
        internalType: "struct NftMarketplaceChallenge.Listing",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "nftAddress",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "getListingPriceUsd",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        internalType: "enum NftMarketplaceChallenge.Token",
        name: "token",
        type: "uint8",
      },
    ],
    name: "getProceeds",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getProceedsAll",
    outputs: [
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getUsdcPriceFeed",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getUsdcToken",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "nftAddress",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "tokenId",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "amount",
            type: "uint256",
          },
          {
            internalType: "enum NftMarketplaceChallenge.Token",
            name: "token",
            type: "uint8",
          },
        ],
        internalType: "struct NftMarketplaceChallenge.ListingParams",
        name: "listingParams",
        type: "tuple",
      },
    ],
    name: "listItem",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "enum NftMarketplaceChallenge.Token",
        name: "",
        type: "uint8",
      },
    ],
    name: "tokenAddresses",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "nftAddress",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "tokenId",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "amount",
            type: "uint256",
          },
          {
            internalType: "enum NftMarketplaceChallenge.Token",
            name: "token",
            type: "uint8",
          },
        ],
        internalType: "struct NftMarketplaceChallenge.ListingParams",
        name: "listingParams",
        type: "tuple",
      },
    ],
    name: "updateListing",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "withdrawAllProceeds",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "enum NftMarketplaceChallenge.Token",
        name: "token",
        type: "uint8",
      },
    ],
    name: "withdrawSingleProceeds",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60e06040523480156200001157600080fd5b5060405162003d2c38038062003d2c83398181016040528101906200003791906200027c565b60016000819055506000600360008060028111156200005b576200005a62000338565b5b600281111562000070576200006f62000338565b5b815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550846003600060016002811115620000d857620000d762000338565b5b6002811115620000ed57620000ec62000338565b5b815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550836003600060028081111562000154576200015362000338565b5b600281111562000169576200016862000338565b5b815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508273ffffffffffffffffffffffffffffffffffffffff1660808173ffffffffffffffffffffffffffffffffffffffff1660601b815250508173ffffffffffffffffffffffffffffffffffffffff1660a08173ffffffffffffffffffffffffffffffffffffffff1660601b815250508073ffffffffffffffffffffffffffffffffffffffff1660c08173ffffffffffffffffffffffffffffffffffffffff1660601b81525050505050505062000386565b60008151905062000276816200036c565b92915050565b600080600080600060a086880312156200029b576200029a62000367565b5b6000620002ab8882890162000265565b9550506020620002be8882890162000265565b9450506040620002d18882890162000265565b9350506060620002e48882890162000265565b9250506080620002f78882890162000265565b9150509295509295909350565b6000620003118262000318565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b600080fd5b620003778162000304565b81146200038357600080fd5b50565b60805160601c60a05160601c60c05160601c613958620003d4600039600081816119de0152611aba0152600081816118fc0152611ea80152600081816118190152611b4201526139586000f3fe6080604052600436106100f35760003560e01c8063a7db80cc1161008a578063b9f4592a11610059578063b9f4592a14610318578063cf0d743714610334578063d794bb2814610371578063ecc9379d146103ae576100f3565b8063a7db80cc1461026e578063afa7d1f014610299578063b2ddee06146102c4578063b7b93b81146102ed576100f3565b8063760442b4116100c6578063760442b4146101a057806388700d1c146101c95780638e1da09f14610206578063a50f713b14610243576100f3565b80633b44390a146100f8578063652fd7d2146101235780636714530d1461014e578063716756a014610177575b600080fd5b34801561010457600080fd5b5061010d6103c5565b60405161011a9190613276565b60405180910390f35b34801561012f57600080fd5b50610138610424565b6040516101459190613396565b60405180910390f35b34801561015a57600080fd5b5061017560048036038101906101709190612f79565b6105a0565b005b34801561018357600080fd5b5061019e60048036038101906101999190612fa6565b610c18565b005b3480156101ac57600080fd5b506101c760048036038101906101c29190612fa6565b6111d9565b005b3480156101d557600080fd5b506101f060048036038101906101eb9190612f0c565b6115e2565b6040516101fd919061344d565b60405180910390f35b34801561021257600080fd5b5061022d60048036038101906102289190612f0c565b6116e8565b60405161023a9190613468565b60405180910390f35b34801561024f57600080fd5b50610258611ab6565b6040516102659190613276565b60405180910390f35b34801561027a57600080fd5b50610283611ade565b6040516102909190613276565b60405180910390f35b3480156102a557600080fd5b506102ae611b3e565b6040516102bb9190613276565b60405180910390f35b3480156102d057600080fd5b506102eb60048036038101906102e69190612f0c565b611b66565b005b3480156102f957600080fd5b50610302611ea4565b60405161030f9190613276565b60405180910390f35b610332600480360381019061032d9190612fa6565b611ecc565b005b34801561034057600080fd5b5061035b60048036038101906103569190612f79565b612ac7565b6040516103689190613276565b60405180910390f35b34801561037d57600080fd5b5061039860048036038101906103939190612ecc565b612afa565b6040516103a59190613468565b60405180910390f35b3480156103ba57600080fd5b506103c3612bd8565b005b6000600360006002808111156103de576103dd6137b7565b5b60028111156103f0576103ef6137b7565b5b815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b60606000600367ffffffffffffffff81111561044357610442613815565b5b6040519080825280602002602001820160405280156104715781602001602082028036833780820191505090505b50905060005b600381101561059857600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000600360008460028111156104d8576104d76137b7565b5b60028111156104ea576104e96137b7565b5b60028111156104fc576104fb6137b7565b5b815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054828281518110610579576105786137e6565b5b602002602001018181525050808061059090613710565b915050610477565b508091505090565b600260005414156105e6576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105dd90613404565b60405180910390fd5b60026000819055506000600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600060036000856002811115610648576106476137b7565b5b600281111561065a576106596137b7565b5b815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205490506000811161070b57336040517f11b60bf40000000000000000000000000000000000000000000000000000000081526004016107029190613276565b60405180910390fd5b6000600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600060036000866002811115610765576107646137b7565b5b6002811115610777576107766137b7565b5b815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550600060028111156107f8576107f76137b7565b5b82600281111561080b5761080a6137b7565b5b141561099f5760003373ffffffffffffffffffffffffffffffffffffffff168260405161083790613261565b60006040518083038185875af1925050503d8060008114610874576040519150601f19603f3d011682016040523d82523d6000602084013e610879565b606091505b50509050806109995781600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000600360008760028111156108db576108da6137b7565b5b60028111156108ed576108ec6137b7565b5b815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555033826040517f840e80d80000000000000000000000000000000000000000000000000000000081526004016109909291906132f1565b60405180910390fd5b50610bab565b6000600360008460028111156109b8576109b76137b7565b5b60028111156109ca576109c96137b7565b5b815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905060008173ffffffffffffffffffffffffffffffffffffffff1663a9059cbb33856040518363ffffffff1660e01b8152600401610a38929190613291565b602060405180830381600087803b158015610a5257600080fd5b505af1158015610a66573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a8a9190612f4c565b905080610ba85782600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600060036000886002811115610aea57610ae96137b7565b5b6002811115610afc57610afb6137b7565b5b815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555033836040517f840e80d8000000000000000000000000000000000000000000000000000000008152600401610b9f9291906132f1565b60405180910390fd5b50505b803373ffffffffffffffffffffffffffffffffffffffff167ff279e6a1f5e320cca91135676d9cb6e44ca8a08c0b88342bcdb1144f6511b568846002811115610bf757610bf66137b7565b5b604051610c049190613468565b60405180910390a350600160008190555050565b80600001518160200151336000600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000848152602001908152602001600020604051806060016040529081600082015481526020016001820160009054906101000a900460ff166002811115610caf57610cae6137b7565b5b6002811115610cc157610cc06137b7565b5b81526020016001820160019054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815250509050600081600001511115610d6b578383836040517f73a5c40a000000000000000000000000000000000000000000000000000000008152600401610d629392919061331a565b60405180910390fd5b8460000151856020015133600083905060008173ffffffffffffffffffffffffffffffffffffffff16636352211e856040518263ffffffff1660e01b8152600401610db69190613468565b60206040518083038186803b158015610dce57600080fd5b505afa158015610de2573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610e069190612e9f565b90508273ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614610e6d576040517f94953b6000000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b896060015160006002811115610e8657610e856137b7565b5b816002811115610e9957610e986137b7565b5b14158015610ecc575060016002811115610eb657610eb56137b7565b5b816002811115610ec957610ec86137b7565b5b14155b8015610efc5750600280811115610ee657610ee56137b7565b5b816002811115610ef957610ef86137b7565b5b14155b15610f33576040517f6752f48700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60008b6040015111610f71576040517ffcfdbf1200000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60008b6000015190503073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1663081812fc8e602001516040518263ffffffff1660e01b8152600401610fce9190613468565b60206040518083038186803b158015610fe657600080fd5b505afa158015610ffa573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061101e9190612e9f565b73ffffffffffffffffffffffffffffffffffffffff161461106b576040517f8189633e00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60405180606001604052808d6040015181526020018d606001516002811115611097576110966137b7565b5b81526020013373ffffffffffffffffffffffffffffffffffffffff16815250600160008e6000015173ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008e6020015181526020019081526020016000206000820151816000015560208201518160010160006101000a81548160ff02191690836002811115611143576111426137b7565b5b021790555060408201518160010160016101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055509050507f914a85a8f3e93993be44b18b0243fa53b57b213b30bfbfcb836cceffb35209fd8c336040516111c3929190613424565b60405180910390a1505050505050505050505050565b8060000151816020015133600083905060008173ffffffffffffffffffffffffffffffffffffffff16636352211e856040518263ffffffff1660e01b81526004016112249190613468565b60206040518083038186803b15801561123c57600080fd5b505afa158015611250573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906112749190612e9f565b90508273ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16146112db576040517f94953b6000000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b856000015186602001516000600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000838152602001908152602001600020604051806060016040529081600082015481526020016001820160009054906101000a900460ff166002811115611371576113706137b7565b5b6002811115611383576113826137b7565b5b81526020016001820160019054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815250509050600081600001511161142a5782826040517f6d350f220000000000000000000000000000000000000000000000000000000081526004016114219291906132f1565b60405180910390fd5b6114776040518060400160405280601281526020017f7570646174696e67206c697374696e673a2000000000000000000000000000008152508a600001518b602001518c60400151612c6b565b60405180606001604052808a6040015181526020018a6060015160028111156114a3576114a26137b7565b5b81526020013373ffffffffffffffffffffffffffffffffffffffff16815250600160008b6000015173ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008b6020015181526020019081526020016000206000820151816000015560208201518160010160006101000a81548160ff0219169083600281111561154f5761154e6137b7565b5b021790555060408201518160010160016101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055509050507f914a85a8f3e93993be44b18b0243fa53b57b213b30bfbfcb836cceffb35209fd89336040516115cf929190613424565b60405180910390a1505050505050505050565b6115ea612d36565b600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000838152602001908152602001600020604051806060016040529081600082015481526020016001820160009054906101000a900460ff166002811115611674576116736137b7565b5b6002811115611686576116856137b7565b5b81526020016001820160019054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681525050905092915050565b600080600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000848152602001908152602001600020604051806060016040529081600082015481526020016001820160009054906101000a900460ff166002811115611775576117746137b7565b5b6002811115611787576117866137b7565b5b81526020016001820160019054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815250509050600080600060028111156117fa576117f96137b7565b5b83602001516002811115611811576118106137b7565b5b14156118c9577f0000000000000000000000000000000000000000000000000000000000000000915060008273ffffffffffffffffffffffffffffffffffffffff1663feaf968c6040518163ffffffff1660e01b815260040160a06040518083038186803b15801561188257600080fd5b505afa158015611896573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906118ba9190613000565b50505091505080915050611a8c565b600160028111156118dd576118dc6137b7565b5b836020015160028111156118f4576118f36137b7565b5b14156119ac577f0000000000000000000000000000000000000000000000000000000000000000915060008273ffffffffffffffffffffffffffffffffffffffff1663feaf968c6040518163ffffffff1660e01b815260040160a06040518083038186803b15801561196557600080fd5b505afa158015611979573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061199d9190613000565b50505091505080915050611a8b565b6002808111156119bf576119be6137b7565b5b836020015160028111156119d6576119d56137b7565b5b1415611a8a577f0000000000000000000000000000000000000000000000000000000000000000915060008273ffffffffffffffffffffffffffffffffffffffff1663feaf968c6040518163ffffffff1660e01b815260040160a06040518083038186803b158015611a4757600080fd5b505afa158015611a5b573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611a7f9190613000565b505050915050809150505b5b5b6305f5e100818460000151611aa1919061358f565b611aab919061355e565b935050505092915050565b60007f0000000000000000000000000000000000000000000000000000000000000000905090565b60006003600060016002811115611af857611af76137b7565b5b6002811115611b0a57611b096137b7565b5b815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b60007f0000000000000000000000000000000000000000000000000000000000000000905090565b818133600083905060008173ffffffffffffffffffffffffffffffffffffffff16636352211e856040518263ffffffff1660e01b8152600401611ba99190613468565b60206040518083038186803b158015611bc157600080fd5b505afa158015611bd5573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611bf99190612e9f565b90508273ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614611c60576040517f94953b6000000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b86866000600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000838152602001908152602001600020604051806060016040529081600082015481526020016001820160009054906101000a900460ff166002811115611cee57611ced6137b7565b5b6002811115611d0057611cff6137b7565b5b81526020016001820160019054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152505090506000816000015111611da75782826040517f6d350f22000000000000000000000000000000000000000000000000000000008152600401611d9e9291906132f1565b60405180910390fd5b600160008b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008a81526020019081526020016000206000808201600090556001820160006101000a81549060ff02191690556001820160016101000a81549073ffffffffffffffffffffffffffffffffffffffff021916905550503373ffffffffffffffffffffffffffffffffffffffff16898b73ffffffffffffffffffffffffffffffffffffffff167f8526cb6d400b8a551983c99e6d6fb1775b7a0deeb5d1e39d3ee65bc59e5eac2760405160405180910390a450505050505050505050565b60007f0000000000000000000000000000000000000000000000000000000000000000905090565b806000015181602001516000600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000838152602001908152602001600020604051806060016040529081600082015481526020016001820160009054906101000a900460ff166002811115611f6257611f616137b7565b5b6002811115611f7457611f736137b7565b5b81526020016001820160019054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815250509050600081600001511161201b5782826040517f6d350f220000000000000000000000000000000000000000000000000000000081526004016120129291906132f1565b60405180910390fd5b836060015160006002811115612034576120336137b7565b5b816002811115612047576120466137b7565b5b1415801561207a575060016002811115612064576120636137b7565b5b816002811115612077576120766137b7565b5b14155b80156120aa5750600280811115612094576120936137b7565b5b8160028111156120a7576120a66137b7565b5b14155b156120e1576040517f6752f48700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b84600060016000836000015173ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600083602001518152602001908152602001600020604051806060016040529081600082015481526020016001820160009054906101000a900460ff166002811115612176576121756137b7565b5b6002811115612188576121876137b7565b5b81526020016001820160019054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815250509050600060028111156121f8576121f76137b7565b5b8260600151600281111561220f5761220e6137b7565b5b141561228b5780600001513410156122865781600001518260200151836040015184606001516002811115612247576122466137b7565b5b6040517f8bb3a8f300000000000000000000000000000000000000000000000000000000815260040161227d9493929190613351565b60405180910390fd5b6123e6565b600060036000846060015160028111156122a8576122a76137b7565b5b60028111156122ba576122b96137b7565b5b815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905082604001518173ffffffffffffffffffffffffffffffffffffffff166370a08231336040518263ffffffff1660e01b81526004016123299190613276565b60206040518083038186803b15801561234157600080fd5b505afa158015612355573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906123799190612fd3565b10156123e457826000015183602001518460400151856060015160028111156123a5576123a46137b7565b5b6040517f8bb3a8f30000000000000000000000000000000000000000000000000000000081526004016123db9493929190613351565b60405180910390fd5b505b6002600054141561242c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161242390613404565b60405180910390fd5b6002600081905550600080600160008a6000015173ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008a602001518152602001908152602001600020604051806060016040529081600082015481526020016001820160009054906101000a900460ff1660028111156124c9576124c86137b7565b5b60028111156124db576124da6137b7565b5b81526020016001820160019054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681525050905060008960000151905060006002811115612554576125536137b7565b5b8a60600151600281111561256b5761256a6137b7565b5b1461282a57600360008b60600151600281111561258b5761258a6137b7565b5b600281111561259d5761259c6137b7565b5b815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16925060008373ffffffffffffffffffffffffffffffffffffffff1663095ea7b384604001518d604001516040518363ffffffff1660e01b81526004016126139291906132f1565b602060405180830381600087803b15801561262d57600080fd5b505af1158015612641573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906126659190612f4c565b90508061269e576040517ff2d5f7bf00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8373ffffffffffffffffffffffffffffffffffffffff166323b872dd33308e604001516040518463ffffffff1660e01b81526004016126df939291906132ba565b602060405180830381600087803b1580156126f957600080fd5b505af115801561270d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906127319190612f4c565b508a6040015160026000856040015173ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000600360008f606001516002811115612797576127966137b7565b5b60028111156127a9576127a86137b7565b5b815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546128219190613508565b92505081905550505b6000600281111561283e5761283d6137b7565b5b8a606001516002811115612855576128546137b7565b5b141561294a573460026000846040015173ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000600360008060028111156128b8576128b76137b7565b5b60028111156128ca576128c96137b7565b5b815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546129429190613508565b925050819055505b600160008b6000015173ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008b6020015181526020019081526020016000206000808201600090556001820160006101000a81549060ff02191690556001820160016101000a81549073ffffffffffffffffffffffffffffffffffffffff021916905550508073ffffffffffffffffffffffffffffffffffffffff166342842e0e8360400151338d602001516040518463ffffffff1660e01b8152600401612a2d939291906132ba565b600060405180830381600087803b158015612a4757600080fd5b505af1158015612a5b573d6000803e3d6000fd5b505050503373ffffffffffffffffffffffffffffffffffffffff167fdf06aeef8b2f256f0f2bc5dc1205023cd9e2ae2e5e46996063f91bdcd755dd828b8460400151604051612aab929190613424565b60405180910390a2505050600160008190555050505050505050565b60036020528060005260406000206000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000600260008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600060036000856002811115612b5457612b536137b7565b5b6002811115612b6657612b656137b7565b5b815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b60026000541415612c1e576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401612c1590613404565b60405180910390fd5b600260008190555060005b6003811015612c6057612c4d816002811115612c4857612c476137b7565b5b6105a0565b8080612c5890613710565b915050612c29565b506001600081905550565b612d0784848484604051602401612c8594939291906133b8565b6040516020818303038152906040527ff8f51b1e000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff8381831617835250505050612d0d565b50505050565b60008151905060006a636f6e736f6c652e6c6f679050602083016000808483855afa5050505050565b60405180606001604052806000815260200160006002811115612d5c57612d5b6137b7565b5b8152602001600073ffffffffffffffffffffffffffffffffffffffff1681525090565b600081359050612d8e8161389f565b92915050565b600081519050612da38161389f565b92915050565b600081519050612db8816138b6565b92915050565b600081359050612dcd816138cd565b92915050565b600081519050612de2816138dd565b92915050565b600060808284031215612dfe57612dfd613844565b5b612e086080613483565b90506000612e1884828501612d7f565b6000830152506020612e2c84828501612e60565b6020830152506040612e4084828501612e60565b6040830152506060612e5484828501612dbe565b60608301525092915050565b600081359050612e6f816138f4565b92915050565b600081519050612e84816138f4565b92915050565b600081519050612e998161390b565b92915050565b600060208284031215612eb557612eb4613849565b5b6000612ec384828501612d94565b91505092915050565b60008060408385031215612ee357612ee2613849565b5b6000612ef185828601612d7f565b9250506020612f0285828601612dbe565b9150509250929050565b60008060408385031215612f2357612f22613849565b5b6000612f3185828601612d7f565b9250506020612f4285828601612e60565b9150509250929050565b600060208284031215612f6257612f61613849565b5b6000612f7084828501612da9565b91505092915050565b600060208284031215612f8f57612f8e613849565b5b6000612f9d84828501612dbe565b91505092915050565b600060808284031215612fbc57612fbb613849565b5b6000612fca84828501612de8565b91505092915050565b600060208284031215612fe957612fe8613849565b5b6000612ff784828501612e75565b91505092915050565b600080600080600060a0868803121561301c5761301b613849565b5b600061302a88828901612e8a565b955050602061303b88828901612dd3565b945050604061304c88828901612e75565b935050606061305d88828901612e75565b925050608061306e88828901612e8a565b9150509295509295909350565b60006130878383613243565b60208301905092915050565b61309c81613664565b82525050565b6130ab816135e9565b82525050565b6130ba816135e9565b82525050565b60006130cb826134b8565b6130d581856134db565b93506130e0836134a8565b8060005b838110156131115781516130f8888261307b565b9750613103836134ce565b9250506001810190506130e4565b5085935050505092915050565b61312781613676565b82525050565b6000613138826134c3565b61314281856134f7565b93506131528185602086016136ac565b61315b8161384e565b840191505092915050565b60006131736000836134ec565b915061317e8261385f565b600082019050919050565b6000613196601f836134f7565b91506131a182613862565b602082019050919050565b6080820160008201516131c260008501826130a2565b5060208201516131d56020850182613243565b5060408201516131e86040850182613243565b5060608201516131fb606085018261311e565b50505050565b6060820160008201516132176000850182613243565b50602082015161322a602085018261311e565b50604082015161323d60408501826130a2565b50505050565b61324c81613644565b82525050565b61325b81613644565b82525050565b600061326c82613166565b9150819050919050565b600060208201905061328b60008301846130b1565b92915050565b60006040820190506132a66000830185613093565b6132b36020830184613252565b9392505050565b60006060820190506132cf60008301866130b1565b6132dc60208301856130b1565b6132e96040830184613252565b949350505050565b600060408201905061330660008301856130b1565b6133136020830184613252565b9392505050565b600060608201905061332f60008301866130b1565b61333c6020830185613252565b61334960408301846130b1565b949350505050565b600060808201905061336660008301876130b1565b6133736020830186613252565b6133806040830185613252565b61338d6060830184613252565b95945050505050565b600060208201905081810360008301526133b081846130c0565b905092915050565b600060808201905081810360008301526133d2818761312d565b90506133e160208301866130b1565b6133ee6040830185613252565b6133fb6060830184613252565b95945050505050565b6000602082019050818103600083015261341d81613189565b9050919050565b600060a08201905061343960008301856131ac565b61344660808301846130b1565b9392505050565b60006060820190506134626000830184613201565b92915050565b600060208201905061347d6000830184613252565b92915050565b600061348d61349e565b905061349982826136df565b919050565b6000604051905090565b6000819050602082019050919050565b600081519050919050565b600081519050919050565b6000602082019050919050565b600082825260208201905092915050565b600081905092915050565b600082825260208201905092915050565b600061351382613644565b915061351e83613644565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0382111561355357613552613759565b5b828201905092915050565b600061356982613644565b915061357483613644565b92508261358457613583613788565b5b828204905092915050565b600061359a82613644565b91506135a583613644565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff04831182151516156135de576135dd613759565b5b828202905092915050565b60006135f482613624565b9050919050565b60008115159050919050565b60008190506136158261388b565b919050565b6000819050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b600069ffffffffffffffffffff82169050919050565b600061366f82613688565b9050919050565b600061368182613607565b9050919050565b60006136938261369a565b9050919050565b60006136a582613624565b9050919050565b60005b838110156136ca5780820151818401526020810190506136af565b838111156136d9576000848401525b50505050565b6136e88261384e565b810181811067ffffffffffffffff8211171561370757613706613815565b5b80604052505050565b600061371b82613644565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82141561374e5761374d613759565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600080fd5b600080fd5b6000601f19601f8301169050919050565b50565b7f5265656e7472616e637947756172643a207265656e7472616e742063616c6c00600082015250565b6003811061389c5761389b6137b7565b5b50565b6138a8816135e9565b81146138b357600080fd5b50565b6138bf816135fb565b81146138ca57600080fd5b50565b600381106138da57600080fd5b50565b6138e68161361a565b81146138f157600080fd5b50565b6138fd81613644565b811461390857600080fd5b50565b6139148161364e565b811461391f57600080fd5b5056fea26469706673582212208469f7c3c1388a567a6e76fe9935bee2d296a530a5f0861cf8d2c2b34dc68f6564736f6c63430008070033";

type NftMarketplaceChallengeConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: NftMarketplaceChallengeConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class NftMarketplaceChallenge__factory extends ContractFactory {
  constructor(...args: NftMarketplaceChallengeConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _daiAddress: PromiseOrValue<string>,
    _usdcAddress: PromiseOrValue<string>,
    _ethPriceFeed: PromiseOrValue<string>,
    _daiPricefeed: PromiseOrValue<string>,
    _usdcPricefeed: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<NftMarketplaceChallenge> {
    return super.deploy(
      _daiAddress,
      _usdcAddress,
      _ethPriceFeed,
      _daiPricefeed,
      _usdcPricefeed,
      overrides || {}
    ) as Promise<NftMarketplaceChallenge>;
  }
  override getDeployTransaction(
    _daiAddress: PromiseOrValue<string>,
    _usdcAddress: PromiseOrValue<string>,
    _ethPriceFeed: PromiseOrValue<string>,
    _daiPricefeed: PromiseOrValue<string>,
    _usdcPricefeed: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _daiAddress,
      _usdcAddress,
      _ethPriceFeed,
      _daiPricefeed,
      _usdcPricefeed,
      overrides || {}
    );
  }
  override attach(address: string): NftMarketplaceChallenge {
    return super.attach(address) as NftMarketplaceChallenge;
  }
  override connect(signer: Signer): NftMarketplaceChallenge__factory {
    return super.connect(signer) as NftMarketplaceChallenge__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): NftMarketplaceChallengeInterface {
    return new utils.Interface(_abi) as NftMarketplaceChallengeInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): NftMarketplaceChallenge {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as NftMarketplaceChallenge;
  }
}
