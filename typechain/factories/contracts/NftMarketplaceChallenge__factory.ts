/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../common";
import type {
  NftMarketplaceChallenge,
  NftMarketplaceChallengeInterface,
} from "../../contracts/NftMarketplaceChallenge";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_daiAddress",
        type: "address",
      },
      {
        internalType: "address",
        name: "_usdcAddress",
        type: "address",
      },
      {
        internalType: "address",
        name: "_ethPriceFeed",
        type: "address",
      },
      {
        internalType: "address",
        name: "_daiPricefeed",
        type: "address",
      },
      {
        internalType: "address",
        name: "_usdcPricefeed",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "NftMarketplace__ERC20ApproveFailed",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "nftAddress",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "NftMarketplace__NftAlreadyListed",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "withdrawer",
        type: "address",
      },
    ],
    name: "NftMarketplace__NoProceeds",
    type: "error",
  },
  {
    inputs: [],
    name: "NftMarketplace__NotApproved",
    type: "error",
  },
  {
    inputs: [],
    name: "NftMarketplace__NotApprovedToken",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "nftAddress",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "NftMarketplace__NotListed",
    type: "error",
  },
  {
    inputs: [],
    name: "NftMarketplace__NotOwner",
    type: "error",
  },
  {
    inputs: [],
    name: "NftMarketplace__PriceMustBeGreaterThanZero",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "nftAddress",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "price",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "token",
        type: "uint256",
      },
    ],
    name: "NftMarketplace__PriceNotMet",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "withdrawer",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "NftMarketplace__WithdrawFailed",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "nftAddress",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "tokenId",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "amount",
            type: "uint256",
          },
          {
            internalType: "enum NftMarketplaceChallenge.Token",
            name: "token",
            type: "uint8",
          },
        ],
        indexed: false,
        internalType: "struct NftMarketplaceChallenge.ListingParams",
        name: "listingParams",
        type: "tuple",
      },
      {
        indexed: true,
        internalType: "address",
        name: "buyer",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "seller",
        type: "address",
      },
    ],
    name: "ItemBought",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "nftAddress",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "tokenId",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "amount",
            type: "uint256",
          },
          {
            internalType: "enum NftMarketplaceChallenge.Token",
            name: "token",
            type: "uint8",
          },
        ],
        indexed: false,
        internalType: "struct NftMarketplaceChallenge.ListingParams",
        name: "listingParams",
        type: "tuple",
      },
      {
        indexed: false,
        internalType: "address",
        name: "seller",
        type: "address",
      },
    ],
    name: "ItemListed",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "nftAddress",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "address",
        name: "seller",
        type: "address",
      },
    ],
    name: "ListingCancelled",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "withdrawer",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "token",
        type: "uint256",
      },
    ],
    name: "Withdraw",
    type: "event",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "nftAddress",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "tokenId",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "amount",
            type: "uint256",
          },
          {
            internalType: "enum NftMarketplaceChallenge.Token",
            name: "token",
            type: "uint8",
          },
        ],
        internalType: "struct NftMarketplaceChallenge.ListingParams",
        name: "listingParams",
        type: "tuple",
      },
    ],
    name: "buyItem",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "nftAddress",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "cancelListing",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "getDaiPriceFeed",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getDaiToken",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getEthPriceFeed",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "nftAddress",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "getListing",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "amount",
            type: "uint256",
          },
          {
            internalType: "enum NftMarketplaceChallenge.Token",
            name: "token",
            type: "uint8",
          },
          {
            internalType: "address",
            name: "seller",
            type: "address",
          },
        ],
        internalType: "struct NftMarketplaceChallenge.Listing",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "nftAddress",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "getListingPriceUsd",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        internalType: "enum NftMarketplaceChallenge.Token",
        name: "token",
        type: "uint8",
      },
    ],
    name: "getProceeds",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getProceedsAll",
    outputs: [
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getUsdcPriceFeed",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getUsdcToken",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "nftAddress",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "tokenId",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "amount",
            type: "uint256",
          },
          {
            internalType: "enum NftMarketplaceChallenge.Token",
            name: "token",
            type: "uint8",
          },
        ],
        internalType: "struct NftMarketplaceChallenge.ListingParams",
        name: "listingParams",
        type: "tuple",
      },
    ],
    name: "listItem",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "enum NftMarketplaceChallenge.Token",
        name: "",
        type: "uint8",
      },
    ],
    name: "tokenAddresses",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "nftAddress",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "tokenId",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "amount",
            type: "uint256",
          },
          {
            internalType: "enum NftMarketplaceChallenge.Token",
            name: "token",
            type: "uint8",
          },
        ],
        internalType: "struct NftMarketplaceChallenge.ListingParams",
        name: "listingParams",
        type: "tuple",
      },
    ],
    name: "updateListing",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "withdrawAllProceeds",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "enum NftMarketplaceChallenge.Token",
        name: "token",
        type: "uint8",
      },
    ],
    name: "withdrawSingleProceeds",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60e06040523480156200001157600080fd5b5060405162003c8438038062003c8483398181016040528101906200003791906200027c565b60016000819055506000600360008060028111156200005b576200005a62000338565b5b600281111562000070576200006f62000338565b5b815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550846003600060016002811115620000d857620000d762000338565b5b6002811115620000ed57620000ec62000338565b5b815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550836003600060028081111562000154576200015362000338565b5b600281111562000169576200016862000338565b5b815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508273ffffffffffffffffffffffffffffffffffffffff1660808173ffffffffffffffffffffffffffffffffffffffff1660601b815250508173ffffffffffffffffffffffffffffffffffffffff1660a08173ffffffffffffffffffffffffffffffffffffffff1660601b815250508073ffffffffffffffffffffffffffffffffffffffff1660c08173ffffffffffffffffffffffffffffffffffffffff1660601b81525050505050505062000386565b60008151905062000276816200036c565b92915050565b600080600080600060a086880312156200029b576200029a62000367565b5b6000620002ab8882890162000265565b9550506020620002be8882890162000265565b9450506040620002d18882890162000265565b9350506060620002e48882890162000265565b9250506080620002f78882890162000265565b9150509295509295909350565b6000620003118262000318565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b600080fd5b620003778162000304565b81146200038357600080fd5b50565b60805160601c60a05160601c60c05160601c6138b0620003d460003960008181611ac40152611ba00152600081816119e20152611f8e0152600081816118ff0152611c2801526138b06000f3fe6080604052600436106100f35760003560e01c8063a7db80cc1161008a578063b9f4592a11610059578063b9f4592a14610318578063cf0d743714610334578063d794bb2814610371578063ecc9379d146103ae576100f3565b8063a7db80cc1461026e578063afa7d1f014610299578063b2ddee06146102c4578063b7b93b81146102ed576100f3565b8063760442b4116100c6578063760442b4146101a057806388700d1c146101c95780638e1da09f14610206578063a50f713b14610243576100f3565b80633b44390a146100f8578063652fd7d2146101235780636714530d1461014e578063716756a014610177575b600080fd5b34801561010457600080fd5b5061010d6103c5565b60405161011a9190613258565b60405180910390f35b34801561012f57600080fd5b50610138610424565b6040516101459190613378565b60405180910390f35b34801561015a57600080fd5b5061017560048036038101906101709190612f94565b6105a0565b005b34801561018357600080fd5b5061019e60048036038101906101999190612fc1565b610c18565b005b3480156101ac57600080fd5b506101c760048036038101906101c29190612fc1565b6111d9565b005b3480156101d557600080fd5b506101f060048036038101906101eb9190612f27565b6116c8565b6040516101fd91906133e3565b60405180910390f35b34801561021257600080fd5b5061022d60048036038101906102289190612f27565b6117ce565b60405161023a91906133fe565b60405180910390f35b34801561024f57600080fd5b50610258611b9c565b6040516102659190613258565b60405180910390f35b34801561027a57600080fd5b50610283611bc4565b6040516102909190613258565b60405180910390f35b3480156102a557600080fd5b506102ae611c24565b6040516102bb9190613258565b60405180910390f35b3480156102d057600080fd5b506102eb60048036038101906102e69190612f27565b611c4c565b005b3480156102f957600080fd5b50610302611f8a565b60405161030f9190613258565b60405180910390f35b610332600480360381019061032d9190612fc1565b611fb2565b005b34801561034057600080fd5b5061035b60048036038101906103569190612f94565b612bad565b6040516103689190613258565b60405180910390f35b34801561037d57600080fd5b5061039860048036038101906103939190612ee7565b612be0565b6040516103a591906133fe565b60405180910390f35b3480156103ba57600080fd5b506103c3612cbe565b005b6000600360006002808111156103de576103dd61370f565b5b60028111156103f0576103ef61370f565b5b815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b60606000600367ffffffffffffffff8111156104435761044261376d565b5b6040519080825280602002602001820160405280156104715781602001602082028036833780820191505090505b50905060005b600381101561059857600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000600360008460028111156104d8576104d761370f565b5b60028111156104ea576104e961370f565b5b60028111156104fc576104fb61370f565b5b815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020548282815181106105795761057861373e565b5b602002602001018181525050808061059090613668565b915050610477565b508091505090565b600260005414156105e6576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105dd9061339a565b60405180910390fd5b60026000819055506000600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000600360008560028111156106485761064761370f565b5b600281111561065a5761065961370f565b5b815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205490506000811161070b57336040517f11b60bf40000000000000000000000000000000000000000000000000000000081526004016107029190613258565b60405180910390fd5b6000600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000600360008660028111156107655761076461370f565b5b60028111156107775761077661370f565b5b815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550600060028111156107f8576107f761370f565b5b82600281111561080b5761080a61370f565b5b141561099f5760003373ffffffffffffffffffffffffffffffffffffffff168260405161083790613243565b60006040518083038185875af1925050503d8060008114610874576040519150601f19603f3d011682016040523d82523d6000602084013e610879565b606091505b50509050806109995781600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000600360008760028111156108db576108da61370f565b5b60028111156108ed576108ec61370f565b5b815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555033826040517f840e80d80000000000000000000000000000000000000000000000000000000081526004016109909291906132d3565b60405180910390fd5b50610bab565b6000600360008460028111156109b8576109b761370f565b5b60028111156109ca576109c961370f565b5b815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905060008173ffffffffffffffffffffffffffffffffffffffff1663a9059cbb33856040518363ffffffff1660e01b8152600401610a38929190613273565b602060405180830381600087803b158015610a5257600080fd5b505af1158015610a66573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a8a9190612f67565b905080610ba85782600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600060036000886002811115610aea57610ae961370f565b5b6002811115610afc57610afb61370f565b5b815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555033836040517f840e80d8000000000000000000000000000000000000000000000000000000008152600401610b9f9291906132d3565b60405180910390fd5b50505b803373ffffffffffffffffffffffffffffffffffffffff167ff279e6a1f5e320cca91135676d9cb6e44ca8a08c0b88342bcdb1144f6511b568846002811115610bf757610bf661370f565b5b604051610c0491906133fe565b60405180910390a350600160008190555050565b80600001518160200151336000600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000848152602001908152602001600020604051806060016040529081600082015481526020016001820160009054906101000a900460ff166002811115610caf57610cae61370f565b5b6002811115610cc157610cc061370f565b5b81526020016001820160019054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815250509050600081600001511115610d6b578383836040517f73a5c40a000000000000000000000000000000000000000000000000000000008152600401610d62939291906132fc565b60405180910390fd5b8460000151856020015133600083905060008173ffffffffffffffffffffffffffffffffffffffff16636352211e856040518263ffffffff1660e01b8152600401610db691906133fe565b60206040518083038186803b158015610dce57600080fd5b505afa158015610de2573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610e069190612eba565b90508273ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614610e6d576040517f94953b6000000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b896060015160006002811115610e8657610e8561370f565b5b816002811115610e9957610e9861370f565b5b14158015610ecc575060016002811115610eb657610eb561370f565b5b816002811115610ec957610ec861370f565b5b14155b8015610efc5750600280811115610ee657610ee561370f565b5b816002811115610ef957610ef861370f565b5b14155b15610f33576040517f6752f48700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60008b6040015111610f71576040517ffcfdbf1200000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60008b6000015190503073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1663081812fc8e602001516040518263ffffffff1660e01b8152600401610fce91906133fe565b60206040518083038186803b158015610fe657600080fd5b505afa158015610ffa573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061101e9190612eba565b73ffffffffffffffffffffffffffffffffffffffff161461106b576040517f8189633e00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60405180606001604052808d6040015181526020018d6060015160028111156110975761109661370f565b5b81526020013373ffffffffffffffffffffffffffffffffffffffff16815250600160008e6000015173ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008e6020015181526020019081526020016000206000820151816000015560208201518160010160006101000a81548160ff021916908360028111156111435761114261370f565b5b021790555060408201518160010160016101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055509050507f914a85a8f3e93993be44b18b0243fa53b57b213b30bfbfcb836cceffb35209fd8c336040516111c39291906133ba565b60405180910390a1505050505050505050505050565b8060000151816020015133600083905060008173ffffffffffffffffffffffffffffffffffffffff16636352211e856040518263ffffffff1660e01b815260040161122491906133fe565b60206040518083038186803b15801561123c57600080fd5b505afa158015611250573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906112749190612eba565b90508273ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16146112db576040517f94953b6000000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b856000015186602001516000600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000838152602001908152602001600020604051806060016040529081600082015481526020016001820160009054906101000a900460ff1660028111156113715761137061370f565b5b60028111156113835761138261370f565b5b81526020016001820160019054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815250509050600081600001511161142a5782826040517f6d350f220000000000000000000000000000000000000000000000000000000081526004016114219291906132d3565b60405180910390fd5b6000600160008b6000015173ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008b602001518152602001908152602001600020604051806060016040529081600082015481526020016001820160009054906101000a900460ff1660028111156114be576114bd61370f565b5b60028111156114d0576114cf61370f565b5b81526020016001820160019054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681525050905089604001518160000181815250508960600151816020019060028111156115565761155561370f565b5b9081600281111561156a5761156961370f565b5b8152505033816040019073ffffffffffffffffffffffffffffffffffffffff16908173ffffffffffffffffffffffffffffffffffffffff168152505080600160008c6000015173ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008c6020015181526020019081526020016000206000820151816000015560208201518160010160006101000a81548160ff021916908360028111156116345761163361370f565b5b021790555060408201518160010160016101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055509050507f914a85a8f3e93993be44b18b0243fa53b57b213b30bfbfcb836cceffb35209fd8a336040516116b49291906133ba565b60405180910390a150505050505050505050565b6116d0612d51565b600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000838152602001908152602001600020604051806060016040529081600082015481526020016001820160009054906101000a900460ff16600281111561175a5761175961370f565b5b600281111561176c5761176b61370f565b5b81526020016001820160019054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681525050905092915050565b600080600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000848152602001908152602001600020604051806060016040529081600082015481526020016001820160009054906101000a900460ff16600281111561185b5761185a61370f565b5b600281111561186d5761186c61370f565b5b81526020016001820160019054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815250509050600080600060028111156118e0576118df61370f565b5b836020015160028111156118f7576118f661370f565b5b14156119af577f0000000000000000000000000000000000000000000000000000000000000000915060008273ffffffffffffffffffffffffffffffffffffffff1663feaf968c6040518163ffffffff1660e01b815260040160a06040518083038186803b15801561196857600080fd5b505afa15801561197c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906119a0919061301b565b50505091505080915050611b72565b600160028111156119c3576119c261370f565b5b836020015160028111156119da576119d961370f565b5b1415611a92577f0000000000000000000000000000000000000000000000000000000000000000915060008273ffffffffffffffffffffffffffffffffffffffff1663feaf968c6040518163ffffffff1660e01b815260040160a06040518083038186803b158015611a4b57600080fd5b505afa158015611a5f573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611a83919061301b565b50505091505080915050611b71565b600280811115611aa557611aa461370f565b5b83602001516002811115611abc57611abb61370f565b5b1415611b70577f0000000000000000000000000000000000000000000000000000000000000000915060008273ffffffffffffffffffffffffffffffffffffffff1663feaf968c6040518163ffffffff1660e01b815260040160a06040518083038186803b158015611b2d57600080fd5b505afa158015611b41573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611b65919061301b565b505050915050809150505b5b5b6305f5e100818460000151611b87919061351a565b611b9191906134e9565b935050505092915050565b60007f0000000000000000000000000000000000000000000000000000000000000000905090565b60006003600060016002811115611bde57611bdd61370f565b5b6002811115611bf057611bef61370f565b5b815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b60007f0000000000000000000000000000000000000000000000000000000000000000905090565b818133600083905060008173ffffffffffffffffffffffffffffffffffffffff16636352211e856040518263ffffffff1660e01b8152600401611c8f91906133fe565b60206040518083038186803b158015611ca757600080fd5b505afa158015611cbb573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611cdf9190612eba565b90508273ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614611d46576040517f94953b6000000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b86866000600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000838152602001908152602001600020604051806060016040529081600082015481526020016001820160009054906101000a900460ff166002811115611dd457611dd361370f565b5b6002811115611de657611de561370f565b5b81526020016001820160019054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152505090506000816000015111611e8d5782826040517f6d350f22000000000000000000000000000000000000000000000000000000008152600401611e849291906132d3565b60405180910390fd5b600160008b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008a81526020019081526020016000206000808201600090556001820160006101000a81549060ff02191690556001820160016101000a81549073ffffffffffffffffffffffffffffffffffffffff021916905550503373ffffffffffffffffffffffffffffffffffffffff16898b73ffffffffffffffffffffffffffffffffffffffff167f8526cb6d400b8a551983c99e6d6fb1775b7a0deeb5d1e39d3ee65bc59e5eac2760405160405180910390a450505050505050505050565b60007f0000000000000000000000000000000000000000000000000000000000000000905090565b806000015181602001516000600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000838152602001908152602001600020604051806060016040529081600082015481526020016001820160009054906101000a900460ff1660028111156120485761204761370f565b5b600281111561205a5761205961370f565b5b81526020016001820160019054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681525050905060008160000151116121015782826040517f6d350f220000000000000000000000000000000000000000000000000000000081526004016120f89291906132d3565b60405180910390fd5b83606001516000600281111561211a5761211961370f565b5b81600281111561212d5761212c61370f565b5b1415801561216057506001600281111561214a5761214961370f565b5b81600281111561215d5761215c61370f565b5b14155b8015612190575060028081111561217a5761217961370f565b5b81600281111561218d5761218c61370f565b5b14155b156121c7576040517f6752f48700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b84600060016000836000015173ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600083602001518152602001908152602001600020604051806060016040529081600082015481526020016001820160009054906101000a900460ff16600281111561225c5761225b61370f565b5b600281111561226e5761226d61370f565b5b81526020016001820160019054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815250509050600060028111156122de576122dd61370f565b5b826060015160028111156122f5576122f461370f565b5b141561237157806000015134101561236c578160000151826020015183604001518460600151600281111561232d5761232c61370f565b5b6040517f8bb3a8f30000000000000000000000000000000000000000000000000000000081526004016123639493929190613333565b60405180910390fd5b6124cc565b6000600360008460600151600281111561238e5761238d61370f565b5b60028111156123a05761239f61370f565b5b815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905082604001518173ffffffffffffffffffffffffffffffffffffffff166370a08231336040518263ffffffff1660e01b815260040161240f9190613258565b60206040518083038186803b15801561242757600080fd5b505afa15801561243b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061245f9190612fee565b10156124ca578260000151836020015184604001518560600151600281111561248b5761248a61370f565b5b6040517f8bb3a8f30000000000000000000000000000000000000000000000000000000081526004016124c19493929190613333565b60405180910390fd5b505b60026000541415612512576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016125099061339a565b60405180910390fd5b6002600081905550600080600160008a6000015173ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008a602001518152602001908152602001600020604051806060016040529081600082015481526020016001820160009054906101000a900460ff1660028111156125af576125ae61370f565b5b60028111156125c1576125c061370f565b5b81526020016001820160019054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152505090506000896000015190506000600281111561263a5761263961370f565b5b8a6060015160028111156126515761265061370f565b5b1461291057600360008b6060015160028111156126715761267061370f565b5b60028111156126835761268261370f565b5b815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16925060008373ffffffffffffffffffffffffffffffffffffffff1663095ea7b384604001518d604001516040518363ffffffff1660e01b81526004016126f99291906132d3565b602060405180830381600087803b15801561271357600080fd5b505af1158015612727573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061274b9190612f67565b905080612784576040517ff2d5f7bf00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8373ffffffffffffffffffffffffffffffffffffffff166323b872dd33308e604001516040518463ffffffff1660e01b81526004016127c59392919061329c565b602060405180830381600087803b1580156127df57600080fd5b505af11580156127f3573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906128179190612f67565b508a6040015160026000856040015173ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000600360008f60600151600281111561287d5761287c61370f565b5b600281111561288f5761288e61370f565b5b815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546129079190613493565b92505081905550505b600060028111156129245761292361370f565b5b8a60600151600281111561293b5761293a61370f565b5b1415612a30573460026000846040015173ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006003600080600281111561299e5761299d61370f565b5b60028111156129b0576129af61370f565b5b815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254612a289190613493565b925050819055505b600160008b6000015173ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008b6020015181526020019081526020016000206000808201600090556001820160006101000a81549060ff02191690556001820160016101000a81549073ffffffffffffffffffffffffffffffffffffffff021916905550508073ffffffffffffffffffffffffffffffffffffffff166342842e0e8360400151338d602001516040518463ffffffff1660e01b8152600401612b139392919061329c565b600060405180830381600087803b158015612b2d57600080fd5b505af1158015612b41573d6000803e3d6000fd5b505050503373ffffffffffffffffffffffffffffffffffffffff167fdf06aeef8b2f256f0f2bc5dc1205023cd9e2ae2e5e46996063f91bdcd755dd828b8460400151604051612b919291906133ba565b60405180910390a2505050600160008190555050505050505050565b60036020528060005260406000206000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000600260008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600060036000856002811115612c3a57612c3961370f565b5b6002811115612c4c57612c4b61370f565b5b815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b60026000541415612d04576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401612cfb9061339a565b60405180910390fd5b600260008190555060005b6003811015612d4657612d33816002811115612d2e57612d2d61370f565b5b6105a0565b8080612d3e90613668565b915050612d0f565b506001600081905550565b60405180606001604052806000815260200160006002811115612d7757612d7661370f565b5b8152602001600073ffffffffffffffffffffffffffffffffffffffff1681525090565b600081359050612da9816137f7565b92915050565b600081519050612dbe816137f7565b92915050565b600081519050612dd38161380e565b92915050565b600081359050612de881613825565b92915050565b600081519050612dfd81613835565b92915050565b600060808284031215612e1957612e1861379c565b5b612e236080613419565b90506000612e3384828501612d9a565b6000830152506020612e4784828501612e7b565b6020830152506040612e5b84828501612e7b565b6040830152506060612e6f84828501612dd9565b60608301525092915050565b600081359050612e8a8161384c565b92915050565b600081519050612e9f8161384c565b92915050565b600081519050612eb481613863565b92915050565b600060208284031215612ed057612ecf6137a1565b5b6000612ede84828501612daf565b91505092915050565b60008060408385031215612efe57612efd6137a1565b5b6000612f0c85828601612d9a565b9250506020612f1d85828601612dd9565b9150509250929050565b60008060408385031215612f3e57612f3d6137a1565b5b6000612f4c85828601612d9a565b9250506020612f5d85828601612e7b565b9150509250929050565b600060208284031215612f7d57612f7c6137a1565b5b6000612f8b84828501612dc4565b91505092915050565b600060208284031215612faa57612fa96137a1565b5b6000612fb884828501612dd9565b91505092915050565b600060808284031215612fd757612fd66137a1565b5b6000612fe584828501612e03565b91505092915050565b600060208284031215613004576130036137a1565b5b600061301284828501612e90565b91505092915050565b600080600080600060a08688031215613037576130366137a1565b5b600061304588828901612ea5565b955050602061305688828901612dee565b945050604061306788828901612e90565b935050606061307888828901612e90565b925050608061308988828901612ea5565b9150509295509295909350565b60006130a28383613225565b60208301905092915050565b6130b7816135ef565b82525050565b6130c681613574565b82525050565b6130d581613574565b82525050565b60006130e68261344e565b6130f08185613466565b93506130fb8361343e565b8060005b8381101561312c5781516131138882613096565b975061311e83613459565b9250506001810190506130ff565b5085935050505092915050565b61314281613601565b82525050565b6000613155600083613477565b9150613160826137b7565b600082019050919050565b6000613178601f83613482565b9150613183826137ba565b602082019050919050565b6080820160008201516131a460008501826130bd565b5060208201516131b76020850182613225565b5060408201516131ca6040850182613225565b5060608201516131dd6060850182613139565b50505050565b6060820160008201516131f96000850182613225565b50602082015161320c6020850182613139565b50604082015161321f60408501826130bd565b50505050565b61322e816135cf565b82525050565b61323d816135cf565b82525050565b600061324e82613148565b9150819050919050565b600060208201905061326d60008301846130cc565b92915050565b600060408201905061328860008301856130ae565b6132956020830184613234565b9392505050565b60006060820190506132b160008301866130cc565b6132be60208301856130cc565b6132cb6040830184613234565b949350505050565b60006040820190506132e860008301856130cc565b6132f56020830184613234565b9392505050565b600060608201905061331160008301866130cc565b61331e6020830185613234565b61332b60408301846130cc565b949350505050565b600060808201905061334860008301876130cc565b6133556020830186613234565b6133626040830185613234565b61336f6060830184613234565b95945050505050565b6000602082019050818103600083015261339281846130db565b905092915050565b600060208201905081810360008301526133b38161316b565b9050919050565b600060a0820190506133cf600083018561318e565b6133dc60808301846130cc565b9392505050565b60006060820190506133f860008301846131e3565b92915050565b60006020820190506134136000830184613234565b92915050565b6000613423613434565b905061342f8282613637565b919050565b6000604051905090565b6000819050602082019050919050565b600081519050919050565b6000602082019050919050565b600082825260208201905092915050565b600081905092915050565b600082825260208201905092915050565b600061349e826135cf565b91506134a9836135cf565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff038211156134de576134dd6136b1565b5b828201905092915050565b60006134f4826135cf565b91506134ff836135cf565b92508261350f5761350e6136e0565b5b828204905092915050565b6000613525826135cf565b9150613530836135cf565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615613569576135686136b1565b5b828202905092915050565b600061357f826135af565b9050919050565b60008115159050919050565b60008190506135a0826137e3565b919050565b6000819050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b600069ffffffffffffffffffff82169050919050565b60006135fa82613613565b9050919050565b600061360c82613592565b9050919050565b600061361e82613625565b9050919050565b6000613630826135af565b9050919050565b613640826137a6565b810181811067ffffffffffffffff8211171561365f5761365e61376d565b5b80604052505050565b6000613673826135cf565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8214156136a6576136a56136b1565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600080fd5b600080fd5b6000601f19601f8301169050919050565b50565b7f5265656e7472616e637947756172643a207265656e7472616e742063616c6c00600082015250565b600381106137f4576137f361370f565b5b50565b61380081613574565b811461380b57600080fd5b50565b61381781613586565b811461382257600080fd5b50565b6003811061383257600080fd5b50565b61383e816135a5565b811461384957600080fd5b50565b613855816135cf565b811461386057600080fd5b50565b61386c816135d9565b811461387757600080fd5b5056fea26469706673582212207a58de0d955684820f56fc135fe45ae821ac5fe3c8cb6df2e75c4861406ace3b64736f6c63430008070033";

type NftMarketplaceChallengeConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: NftMarketplaceChallengeConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class NftMarketplaceChallenge__factory extends ContractFactory {
  constructor(...args: NftMarketplaceChallengeConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _daiAddress: PromiseOrValue<string>,
    _usdcAddress: PromiseOrValue<string>,
    _ethPriceFeed: PromiseOrValue<string>,
    _daiPricefeed: PromiseOrValue<string>,
    _usdcPricefeed: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<NftMarketplaceChallenge> {
    return super.deploy(
      _daiAddress,
      _usdcAddress,
      _ethPriceFeed,
      _daiPricefeed,
      _usdcPricefeed,
      overrides || {}
    ) as Promise<NftMarketplaceChallenge>;
  }
  override getDeployTransaction(
    _daiAddress: PromiseOrValue<string>,
    _usdcAddress: PromiseOrValue<string>,
    _ethPriceFeed: PromiseOrValue<string>,
    _daiPricefeed: PromiseOrValue<string>,
    _usdcPricefeed: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _daiAddress,
      _usdcAddress,
      _ethPriceFeed,
      _daiPricefeed,
      _usdcPricefeed,
      overrides || {}
    );
  }
  override attach(address: string): NftMarketplaceChallenge {
    return super.attach(address) as NftMarketplaceChallenge;
  }
  override connect(signer: Signer): NftMarketplaceChallenge__factory {
    return super.connect(signer) as NftMarketplaceChallenge__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): NftMarketplaceChallengeInterface {
    return new utils.Interface(_abi) as NftMarketplaceChallengeInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): NftMarketplaceChallenge {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as NftMarketplaceChallenge;
  }
}
