/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../common";
import type {
  NftMarketplaceChallenge,
  NftMarketplaceChallengeInterface,
} from "../../contracts/NftMarketplaceChallenge";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_daiAddress",
        type: "address",
      },
      {
        internalType: "address",
        name: "_usdcAddress",
        type: "address",
      },
      {
        internalType: "address",
        name: "_ethPriceFeed",
        type: "address",
      },
      {
        internalType: "address",
        name: "_daiPricefeed",
        type: "address",
      },
      {
        internalType: "address",
        name: "_usdcPricefeed",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "NftMarketplace__ERC20ApproveFailed",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "nftAddress",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "NftMarketplace__NftAlreadyListed",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "withdrawer",
        type: "address",
      },
    ],
    name: "NftMarketplace__NoProceeds",
    type: "error",
  },
  {
    inputs: [],
    name: "NftMarketplace__NotApproved",
    type: "error",
  },
  {
    inputs: [],
    name: "NftMarketplace__NotApprovedToken",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "nftAddress",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "NftMarketplace__NotListed",
    type: "error",
  },
  {
    inputs: [],
    name: "NftMarketplace__NotOwner",
    type: "error",
  },
  {
    inputs: [],
    name: "NftMarketplace__PriceMustBeGreaterThanZero",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "nftAddress",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "price",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "token",
        type: "uint256",
      },
    ],
    name: "NftMarketplace__PriceNotMet",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "withdrawer",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "NftMarketplace__WithdrawFailed",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "nftAddress",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "tokenId",
            type: "uint256",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "amount",
                type: "uint256",
              },
              {
                internalType: "enum NftMarketplaceChallenge.Token",
                name: "token",
                type: "uint8",
              },
            ],
            internalType: "struct NftMarketplaceChallenge.Pricing",
            name: "pricing",
            type: "tuple",
          },
        ],
        indexed: false,
        internalType: "struct NftMarketplaceChallenge.ListingParams",
        name: "listingParams",
        type: "tuple",
      },
      {
        indexed: true,
        internalType: "address",
        name: "buyer",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "seller",
        type: "address",
      },
    ],
    name: "ItemBought",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "nftAddress",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "tokenId",
            type: "uint256",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "amount",
                type: "uint256",
              },
              {
                internalType: "enum NftMarketplaceChallenge.Token",
                name: "token",
                type: "uint8",
              },
            ],
            internalType: "struct NftMarketplaceChallenge.Pricing",
            name: "pricing",
            type: "tuple",
          },
        ],
        indexed: false,
        internalType: "struct NftMarketplaceChallenge.ListingParams",
        name: "listingParams",
        type: "tuple",
      },
      {
        indexed: false,
        internalType: "address",
        name: "seller",
        type: "address",
      },
    ],
    name: "ItemListed",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "nftAddress",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "address",
        name: "seller",
        type: "address",
      },
    ],
    name: "ListingCancelled",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "withdrawer",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "token",
        type: "uint256",
      },
    ],
    name: "Withdraw",
    type: "event",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "nftAddress",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "tokenId",
            type: "uint256",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "amount",
                type: "uint256",
              },
              {
                internalType: "enum NftMarketplaceChallenge.Token",
                name: "token",
                type: "uint8",
              },
            ],
            internalType: "struct NftMarketplaceChallenge.Pricing",
            name: "pricing",
            type: "tuple",
          },
        ],
        internalType: "struct NftMarketplaceChallenge.ListingParams",
        name: "listingParams",
        type: "tuple",
      },
    ],
    name: "buyItem",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "nftAddress",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "cancelListing",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "getDaiPriceFeed",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getDaiToken",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getEthPriceFeed",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "nftAddress",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "getListing",
    outputs: [
      {
        components: [
          {
            components: [
              {
                internalType: "uint256",
                name: "amount",
                type: "uint256",
              },
              {
                internalType: "enum NftMarketplaceChallenge.Token",
                name: "token",
                type: "uint8",
              },
            ],
            internalType: "struct NftMarketplaceChallenge.Pricing",
            name: "pricing",
            type: "tuple",
          },
          {
            internalType: "address",
            name: "seller",
            type: "address",
          },
        ],
        internalType: "struct NftMarketplaceChallenge.Listing",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "nftAddress",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "getListingPrice",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "amount",
            type: "uint256",
          },
          {
            internalType: "enum NftMarketplaceChallenge.Token",
            name: "token",
            type: "uint8",
          },
        ],
        internalType: "struct NftMarketplaceChallenge.Pricing",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "nftAddress",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "getListingPriceUsd",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        internalType: "enum NftMarketplaceChallenge.Token",
        name: "token",
        type: "uint8",
      },
    ],
    name: "getProceeds",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getProceedsAll",
    outputs: [
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getUsdcPriceFeed",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getUsdcToken",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "nftAddress",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "tokenId",
            type: "uint256",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "amount",
                type: "uint256",
              },
              {
                internalType: "enum NftMarketplaceChallenge.Token",
                name: "token",
                type: "uint8",
              },
            ],
            internalType: "struct NftMarketplaceChallenge.Pricing",
            name: "pricing",
            type: "tuple",
          },
        ],
        internalType: "struct NftMarketplaceChallenge.ListingParams",
        name: "listingParams",
        type: "tuple",
      },
    ],
    name: "listItem",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "enum NftMarketplaceChallenge.Token",
        name: "",
        type: "uint8",
      },
    ],
    name: "tokenAddresses",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "nftAddress",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "tokenId",
            type: "uint256",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "amount",
                type: "uint256",
              },
              {
                internalType: "enum NftMarketplaceChallenge.Token",
                name: "token",
                type: "uint8",
              },
            ],
            internalType: "struct NftMarketplaceChallenge.Pricing",
            name: "pricing",
            type: "tuple",
          },
        ],
        internalType: "struct NftMarketplaceChallenge.ListingParams",
        name: "listingParams",
        type: "tuple",
      },
    ],
    name: "updateListing",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "withdrawAllProceeds",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "enum NftMarketplaceChallenge.Token",
        name: "token",
        type: "uint8",
      },
    ],
    name: "withdrawSingleProceeds",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60e06040523480156200001157600080fd5b5060405162003d6f38038062003d6f83398181016040528101906200003791906200027c565b60016000819055506000600360008060028111156200005b576200005a62000338565b5b600281111562000070576200006f62000338565b5b815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550846003600060016002811115620000d857620000d762000338565b5b6002811115620000ed57620000ec62000338565b5b815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550836003600060028081111562000154576200015362000338565b5b600281111562000169576200016862000338565b5b815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508273ffffffffffffffffffffffffffffffffffffffff1660808173ffffffffffffffffffffffffffffffffffffffff1660601b815250508173ffffffffffffffffffffffffffffffffffffffff1660a08173ffffffffffffffffffffffffffffffffffffffff1660601b815250508073ffffffffffffffffffffffffffffffffffffffff1660c08173ffffffffffffffffffffffffffffffffffffffff1660601b81525050505050505062000386565b60008151905062000276816200036c565b92915050565b600080600080600060a086880312156200029b576200029a62000367565b5b6000620002ab8882890162000265565b9550506020620002be8882890162000265565b9450506040620002d18882890162000265565b9350506060620002e48882890162000265565b9250506080620002f78882890162000265565b9150509295509295909350565b6000620003118262000318565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b600080fd5b620003778162000304565b81146200038357600080fd5b50565b60805160601c60a05160601c60c05160601c61399b620003d460003960008181611dc50152611ea5015260008181611cdf0152612882015260008181611bf801526124fd015261399b6000f3fe6080604052600436106100fe5760003560e01c8063a646dc7a11610095578063b7b93b8111610064578063b7b93b8114610328578063cf0d743714610353578063d794bb2814610390578063ecc9379d146103cd578063f1c1689b146103e4576100fe565b8063a646dc7a14610280578063a7db80cc146102a9578063afa7d1f0146102d4578063b2ddee06146102ff576100fe565b80636714530d116100d15780636714530d146101b257806388700d1c146101db5780638e1da09f14610218578063a50f713b14610255576100fe565b806306d78397146101035780633b44390a14610140578063652fd7d21461016b57806366fee1f514610196575b600080fd5b34801561010f57600080fd5b5061012a60048036038101906101259190612fbf565b61040d565b60405161013791906134ce565b60405180910390f35b34801561014c57600080fd5b506101556104c0565b6040516101629190613328565b60405180910390f35b34801561017757600080fd5b5061018061051f565b60405161018d9190613448565b60405180910390f35b6101b060048036038101906101ab9190613059565b61069b565b005b3480156101be57600080fd5b506101d960048036038101906101d4919061302c565b61131d565b005b3480156101e757600080fd5b5061020260048036038101906101fd9190612fbf565b611995565b60405161020f91906134b3565b60405180910390f35b34801561022457600080fd5b5061023f600480360381019061023a9190612fbf565b611aaf565b60405161024c91906134e9565b60405180910390f35b34801561026157600080fd5b5061026a611ea1565b6040516102779190613328565b60405180910390f35b34801561028c57600080fd5b506102a760048036038101906102a29190613059565b611ec9565b005b3480156102b557600080fd5b506102be612499565b6040516102cb9190613328565b60405180910390f35b3480156102e057600080fd5b506102e96124f9565b6040516102f69190613328565b60405180910390f35b34801561030b57600080fd5b5061032660048036038101906103219190612fbf565b612521565b005b34801561033457600080fd5b5061033d61287e565b60405161034a9190613328565b60405180910390f35b34801561035f57600080fd5b5061037a6004803603810190610375919061302c565b6128a6565b6040516103879190613328565b60405180910390f35b34801561039c57600080fd5b506103b760048036038101906103b29190612f7f565b6128d9565b6040516103c491906134e9565b60405180910390f35b3480156103d957600080fd5b506103e26129b7565b005b3480156103f057600080fd5b5061040b60048036038101906104069190613059565b612a4a565b005b610415612d94565b600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000838152602001908152602001600020600001604051806040016040529081600082015481526020016001820160009054906101000a900460ff1660028111156104a2576104a16137fa565b5b60028111156104b4576104b36137fa565b5b81525050905092915050565b6000600360006002808111156104d9576104d86137fa565b5b60028111156104eb576104ea6137fa565b5b815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b60606000600367ffffffffffffffff81111561053e5761053d613858565b5b60405190808252806020026020018201604052801561056c5781602001602082028036833780820191505090505b50905060005b600381101561069357600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000600360008460028111156105d3576105d26137fa565b5b60028111156105e5576105e46137fa565b5b60028111156105f7576105f66137fa565b5b815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205482828151811061067457610673613829565b5b602002602001018181525050808061068b90613753565b915050610572565b508091505090565b806000015181602001516000600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600083815260200190815260200160002060405180604001604052908160008201604051806040016040529081600082015481526020016001820160009054906101000a900460ff166002811115610741576107406137fa565b5b6002811115610753576107526137fa565b5b8152505081526020016002820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152505090506000816000015160000151116108025782826040517f6d350f220000000000000000000000000000000000000000000000000000000081526004016107f99291906133a3565b60405180910390fd5b8360400151602001516000600281111561081f5761081e6137fa565b5b816002811115610832576108316137fa565b5b1415801561086557506001600281111561084f5761084e6137fa565b5b816002811115610862576108616137fa565b5b14155b8015610895575060028081111561087f5761087e6137fa565b5b816002811115610892576108916137fa565b5b14155b156108cc576040517f6752f48700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b84600060016000836000015173ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008360200151815260200190815260200160002060405180604001604052908160008201604051806040016040529081600082015481526020016001820160009054906101000a900460ff166002811115610971576109706137fa565b5b6002811115610983576109826137fa565b5b8152505081526020016002820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815250509050600060028111156109f7576109f66137fa565b5b8260400151602001516002811115610a1257610a116137fa565b5b1415610a9a57806000015160000151341015610a9557816000015182602001518360400151600001518460400151602001516002811115610a5657610a556137fa565b5b6040517f8bb3a8f3000000000000000000000000000000000000000000000000000000008152600401610a8c9493929190613403565b60405180910390fd5b610c05565b6000600360008460400151602001516002811115610abb57610aba6137fa565b5b6002811115610acd57610acc6137fa565b5b815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690508260400151600001518173ffffffffffffffffffffffffffffffffffffffff166370a08231336040518263ffffffff1660e01b8152600401610b409190613328565b60206040518083038186803b158015610b5857600080fd5b505afa158015610b6c573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b909190613086565b1015610c0357826000015183602001518460400151600001518560400151602001516002811115610bc457610bc36137fa565b5b6040517f8bb3a8f3000000000000000000000000000000000000000000000000000000008152600401610bfa9493929190613403565b60405180910390fd5b505b60026000541415610c4b576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610c429061346a565b60405180910390fd5b6002600081905550600080600160008a6000015173ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008a60200151815260200190815260200160002060405180604001604052908160008201604051806040016040529081600082015481526020016001820160009054906101000a900460ff166002811115610cf857610cf76137fa565b5b6002811115610d0a57610d096137fa565b5b8152505081526020016002820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681525050905060008960000151905060006002811115610d8757610d866137fa565b5b8a60400151602001516002811115610da257610da16137fa565b5b1461107557600360008b60400151602001516002811115610dc657610dc56137fa565b5b6002811115610dd857610dd76137fa565b5b815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16925060008373ffffffffffffffffffffffffffffffffffffffff1663095ea7b384602001518d60400151600001516040518363ffffffff1660e01b8152600401610e529291906133a3565b602060405180830381600087803b158015610e6c57600080fd5b505af1158015610e80573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610ea49190612fff565b905080610edd576040517ff2d5f7bf00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8373ffffffffffffffffffffffffffffffffffffffff166323b872dd33308e60400151600001516040518463ffffffff1660e01b8152600401610f229392919061336c565b602060405180830381600087803b158015610f3c57600080fd5b505af1158015610f50573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610f749190612fff565b508a604001516000015160026000856020015173ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000600360008f60400151602001516002811115610fe257610fe16137fa565b5b6002811115610ff457610ff36137fa565b5b815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825461106c919061357e565b92505081905550505b60006002811115611089576110886137fa565b5b8a604001516020015160028111156110a4576110a36137fa565b5b1415611199573460026000846020015173ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600060036000806002811115611107576111066137fa565b5b6002811115611119576111186137fa565b5b815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254611191919061357e565b925050819055505b600160008b6000015173ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008b60200151815260200190815260200160002060008082016000808201600090556001820160006101000a81549060ff021916905550506002820160006101000a81549073ffffffffffffffffffffffffffffffffffffffff021916905550508073ffffffffffffffffffffffffffffffffffffffff166342842e0e8360200151338d602001516040518463ffffffff1660e01b81526004016112839392919061336c565b600060405180830381600087803b15801561129d57600080fd5b505af11580156112b1573d6000803e3d6000fd5b505050503373ffffffffffffffffffffffffffffffffffffffff167f5a58d5efb805360c1d439380675d6b4d557bada5737540b8c2ba2b361443942e8b846020015160405161130192919061348a565b60405180910390a2505050600160008190555050505050505050565b60026000541415611363576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161135a9061346a565b60405180910390fd5b60026000819055506000600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000600360008560028111156113c5576113c46137fa565b5b60028111156113d7576113d66137fa565b5b815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205490506000811161148857336040517f11b60bf400000000000000000000000000000000000000000000000000000000815260040161147f9190613328565b60405180910390fd5b6000600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000600360008660028111156114e2576114e16137fa565b5b60028111156114f4576114f36137fa565b5b815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555060006002811115611575576115746137fa565b5b826002811115611588576115876137fa565b5b141561171c5760003373ffffffffffffffffffffffffffffffffffffffff16826040516115b490613313565b60006040518083038185875af1925050503d80600081146115f1576040519150601f19603f3d011682016040523d82523d6000602084013e6115f6565b606091505b50509050806117165781600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600060036000876002811115611658576116576137fa565b5b600281111561166a576116696137fa565b5b815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555033826040517f840e80d800000000000000000000000000000000000000000000000000000000815260040161170d9291906133a3565b60405180910390fd5b50611928565b600060036000846002811115611735576117346137fa565b5b6002811115611747576117466137fa565b5b815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905060008173ffffffffffffffffffffffffffffffffffffffff1663a9059cbb33856040518363ffffffff1660e01b81526004016117b5929190613343565b602060405180830381600087803b1580156117cf57600080fd5b505af11580156117e3573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906118079190612fff565b9050806119255782600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600060036000886002811115611867576118666137fa565b5b6002811115611879576118786137fa565b5b815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555033836040517f840e80d800000000000000000000000000000000000000000000000000000000815260040161191c9291906133a3565b60405180910390fd5b50505b803373ffffffffffffffffffffffffffffffffffffffff167ff279e6a1f5e320cca91135676d9cb6e44ca8a08c0b88342bcdb1144f6511b568846002811115611974576119736137fa565b5b60405161198191906134e9565b60405180910390a350600160008190555050565b61199d612dc0565b600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600083815260200190815260200160002060405180604001604052908160008201604051806040016040529081600082015481526020016001820160009054906101000a900460ff166002811115611a3757611a366137fa565b5b6002811115611a4957611a486137fa565b5b8152505081526020016002820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681525050905092915050565b600080600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600084815260200190815260200160002060405180604001604052908160008201604051806040016040529081600082015481526020016001820160009054906101000a900460ff166002811115611b4c57611b4b6137fa565b5b6002811115611b5e57611b5d6137fa565b5b8152505081526020016002820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681525050905060008060006002811115611bd557611bd46137fa565b5b8360000151602001516002811115611bf057611bef6137fa565b5b1415611ca8577f0000000000000000000000000000000000000000000000000000000000000000915060008273ffffffffffffffffffffffffffffffffffffffff1663feaf968c6040518163ffffffff1660e01b815260040160a06040518083038186803b158015611c6157600080fd5b505afa158015611c75573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611c9991906130b3565b50505091505080915050611e73565b60016002811115611cbc57611cbb6137fa565b5b8360000151602001516002811115611cd757611cd66137fa565b5b1415611d8f577f0000000000000000000000000000000000000000000000000000000000000000915060008273ffffffffffffffffffffffffffffffffffffffff1663feaf968c6040518163ffffffff1660e01b815260040160a06040518083038186803b158015611d4857600080fd5b505afa158015611d5c573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611d8091906130b3565b50505091505080915050611e72565b600280811115611da257611da16137fa565b5b8360000151602001516002811115611dbd57611dbc6137fa565b5b1415611e71577f0000000000000000000000000000000000000000000000000000000000000000915060008273ffffffffffffffffffffffffffffffffffffffff1663feaf968c6040518163ffffffff1660e01b815260040160a06040518083038186803b158015611e2e57600080fd5b505afa158015611e42573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611e6691906130b3565b505050915050809150505b5b5b6305f5e10081846000015160000151611e8c9190613605565b611e9691906135d4565b935050505092915050565b60007f0000000000000000000000000000000000000000000000000000000000000000905090565b80600001518160200151336000600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600084815260200190815260200160002060405180604001604052908160008201604051806040016040529081600082015481526020016001820160009054906101000a900460ff166002811115611f7057611f6f6137fa565b5b6002811115611f8257611f816137fa565b5b8152505081526020016002820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681525050905060008160000151600001511115612034578383836040517f73a5c40a00000000000000000000000000000000000000000000000000000000815260040161202b939291906133cc565b60405180910390fd5b8460000151856020015133600083905060008173ffffffffffffffffffffffffffffffffffffffff16636352211e856040518263ffffffff1660e01b815260040161207f91906134e9565b60206040518083038186803b15801561209757600080fd5b505afa1580156120ab573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906120cf9190612f52565b90508273ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614612136576040517f94953b6000000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b89604001516020015160006002811115612153576121526137fa565b5b816002811115612166576121656137fa565b5b14158015612199575060016002811115612183576121826137fa565b5b816002811115612196576121956137fa565b5b14155b80156121c957506002808111156121b3576121b26137fa565b5b8160028111156121c6576121c56137fa565b5b14155b15612200576040517f6752f48700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60008b604001516000015111612242576040517ffcfdbf1200000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60008b6000015190503073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1663081812fc8e602001516040518263ffffffff1660e01b815260040161229f91906134e9565b60206040518083038186803b1580156122b757600080fd5b505afa1580156122cb573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906122ef9190612f52565b73ffffffffffffffffffffffffffffffffffffffff161461233c576040517f8189633e00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60405180604001604052808d6040015181526020013373ffffffffffffffffffffffffffffffffffffffff16815250600160008e6000015173ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008e6020015181526020019081526020016000206000820151816000016000820151816000015560208201518160010160006101000a81548160ff02191690836002811115612401576124006137fa565b5b0217905550505060208201518160020160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055509050507f4ae53a3535aa51e5e1f121627676cb38488eba0ff4b93cdb333b2c8a345602038c3360405161248392919061348a565b60405180910390a1505050505050505050505050565b600060036000600160028111156124b3576124b26137fa565b5b60028111156124c5576124c46137fa565b5b815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b60007f0000000000000000000000000000000000000000000000000000000000000000905090565b818133600083905060008173ffffffffffffffffffffffffffffffffffffffff16636352211e856040518263ffffffff1660e01b815260040161256491906134e9565b60206040518083038186803b15801561257c57600080fd5b505afa158015612590573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906125b49190612f52565b90508273ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161461261b576040517f94953b6000000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b86866000600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600083815260200190815260200160002060405180604001604052908160008201604051806040016040529081600082015481526020016001820160009054906101000a900460ff1660028111156126b9576126b86137fa565b5b60028111156126cb576126ca6137fa565b5b8152505081526020016002820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681525050905060008160000151600001511161277a5782826040517f6d350f220000000000000000000000000000000000000000000000000000000081526004016127719291906133a3565b60405180910390fd5b600160008b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008a815260200190815260200160002060008082016000808201600090556001820160006101000a81549060ff021916905550506002820160006101000a81549073ffffffffffffffffffffffffffffffffffffffff021916905550503373ffffffffffffffffffffffffffffffffffffffff16898b73ffffffffffffffffffffffffffffffffffffffff167f8526cb6d400b8a551983c99e6d6fb1775b7a0deeb5d1e39d3ee65bc59e5eac2760405160405180910390a450505050505050505050565b60007f0000000000000000000000000000000000000000000000000000000000000000905090565b60036020528060005260406000206000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000600260008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600060036000856002811115612933576129326137fa565b5b6002811115612945576129446137fa565b5b815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b600260005414156129fd576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016129f49061346a565b60405180910390fd5b600260008190555060005b6003811015612a3f57612a2c816002811115612a2757612a266137fa565b5b61131d565b8080612a3790613753565b915050612a08565b506001600081905550565b8060000151816020015133600083905060008173ffffffffffffffffffffffffffffffffffffffff16636352211e856040518263ffffffff1660e01b8152600401612a9591906134e9565b60206040518083038186803b158015612aad57600080fd5b505afa158015612ac1573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612ae59190612f52565b90508273ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614612b4c576040517f94953b6000000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b856000015186602001516000600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600083815260200190815260200160002060405180604001604052908160008201604051806040016040529081600082015481526020016001820160009054906101000a900460ff166002811115612bf257612bf16137fa565b5b6002811115612c0457612c036137fa565b5b8152505081526020016002820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815250509050600081600001516000015111612cb35782826040517f6d350f22000000000000000000000000000000000000000000000000000000008152600401612caa9291906133a3565b60405180910390fd5b8860400151600160008b6000015173ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008b6020015181526020019081526020016000206000016000820151816000015560208201518160010160006101000a81548160ff02191690836002811115612d4857612d476137fa565b5b02179055509050507f4ae53a3535aa51e5e1f121627676cb38488eba0ff4b93cdb333b2c8a345602038933604051612d8192919061348a565b60405180910390a1505050505050505050565b60405180604001604052806000815260200160006002811115612dba57612db96137fa565b5b81525090565b6040518060400160405280612dd3612d94565b8152602001600073ffffffffffffffffffffffffffffffffffffffff1681525090565b600081359050612e05816138e2565b92915050565b600081519050612e1a816138e2565b92915050565b600081519050612e2f816138f9565b92915050565b600081359050612e4481613910565b92915050565b600081519050612e5981613920565b92915050565b600060808284031215612e7557612e74613887565b5b612e7f6060613504565b90506000612e8f84828501612df6565b6000830152506020612ea384828501612f13565b6020830152506040612eb784828501612ec3565b60408301525092915050565b600060408284031215612ed957612ed8613887565b5b612ee36040613504565b90506000612ef384828501612f13565b6000830152506020612f0784828501612e35565b60208301525092915050565b600081359050612f2281613937565b92915050565b600081519050612f3781613937565b92915050565b600081519050612f4c8161394e565b92915050565b600060208284031215612f6857612f6761388c565b5b6000612f7684828501612e0b565b91505092915050565b60008060408385031215612f9657612f9561388c565b5b6000612fa485828601612df6565b9250506020612fb585828601612e35565b9150509250929050565b60008060408385031215612fd657612fd561388c565b5b6000612fe485828601612df6565b9250506020612ff585828601612f13565b9150509250929050565b6000602082840312156130155761301461388c565b5b600061302384828501612e20565b91505092915050565b6000602082840312156130425761304161388c565b5b600061305084828501612e35565b91505092915050565b60006080828403121561306f5761306e61388c565b5b600061307d84828501612e5f565b91505092915050565b60006020828403121561309c5761309b61388c565b5b60006130aa84828501612f28565b91505092915050565b600080600080600060a086880312156130cf576130ce61388c565b5b60006130dd88828901612f3d565b95505060206130ee88828901612e4a565b94505060406130ff88828901612f28565b935050606061311088828901612f28565b925050608061312188828901612f3d565b9150509295509295909350565b600061313a83836132f5565b60208301905092915050565b61314f816136da565b82525050565b61315e8161365f565b82525050565b61316d8161365f565b82525050565b600061317e82613539565b6131888185613551565b935061319383613529565b8060005b838110156131c45781516131ab888261312e565b97506131b683613544565b925050600181019050613197565b5085935050505092915050565b6131da816136ec565b82525050565b60006131ed600083613562565b91506131f8826138a2565b600082019050919050565b6000613210601f8361356d565b915061321b826138a5565b602082019050919050565b60808201600082015161323c6000850182613155565b50602082015161324f60208501826132f5565b5060408201516132626040850182613297565b50505050565b60608201600082015161327e6000850182613297565b5060208201516132916040850182613155565b50505050565b6040820160008201516132ad60008501826132f5565b5060208201516132c060208501826131d1565b50505050565b6040820160008201516132dc60008501826132f5565b5060208201516132ef60208501826131d1565b50505050565b6132fe816136ba565b82525050565b61330d816136ba565b82525050565b600061331e826131e0565b9150819050919050565b600060208201905061333d6000830184613164565b92915050565b60006040820190506133586000830185613146565b6133656020830184613304565b9392505050565b60006060820190506133816000830186613164565b61338e6020830185613164565b61339b6040830184613304565b949350505050565b60006040820190506133b86000830185613164565b6133c56020830184613304565b9392505050565b60006060820190506133e16000830186613164565b6133ee6020830185613304565b6133fb6040830184613164565b949350505050565b60006080820190506134186000830187613164565b6134256020830186613304565b6134326040830185613304565b61343f6060830184613304565b95945050505050565b600060208201905081810360008301526134628184613173565b905092915050565b6000602082019050818103600083015261348381613203565b9050919050565b600060a08201905061349f6000830185613226565b6134ac6080830184613164565b9392505050565b60006060820190506134c86000830184613268565b92915050565b60006040820190506134e360008301846132c6565b92915050565b60006020820190506134fe6000830184613304565b92915050565b600061350e61351f565b905061351a8282613722565b919050565b6000604051905090565b6000819050602082019050919050565b600081519050919050565b6000602082019050919050565b600082825260208201905092915050565b600081905092915050565b600082825260208201905092915050565b6000613589826136ba565b9150613594836136ba565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff038211156135c9576135c861379c565b5b828201905092915050565b60006135df826136ba565b91506135ea836136ba565b9250826135fa576135f96137cb565b5b828204905092915050565b6000613610826136ba565b915061361b836136ba565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff04831182151516156136545761365361379c565b5b828202905092915050565b600061366a8261369a565b9050919050565b60008115159050919050565b600081905061368b826138ce565b919050565b6000819050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b600069ffffffffffffffffffff82169050919050565b60006136e5826136fe565b9050919050565b60006136f78261367d565b9050919050565b600061370982613710565b9050919050565b600061371b8261369a565b9050919050565b61372b82613891565b810181811067ffffffffffffffff8211171561374a57613749613858565b5b80604052505050565b600061375e826136ba565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8214156137915761379061379c565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600080fd5b600080fd5b6000601f19601f8301169050919050565b50565b7f5265656e7472616e637947756172643a207265656e7472616e742063616c6c00600082015250565b600381106138df576138de6137fa565b5b50565b6138eb8161365f565b81146138f657600080fd5b50565b61390281613671565b811461390d57600080fd5b50565b6003811061391d57600080fd5b50565b61392981613690565b811461393457600080fd5b50565b613940816136ba565b811461394b57600080fd5b50565b613957816136c4565b811461396257600080fd5b5056fea26469706673582212204ba4d309b66125cb4612ebe1c4d9e257d3a7eac8ba377593f979510b6998f10164736f6c63430008070033";

type NftMarketplaceChallengeConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: NftMarketplaceChallengeConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class NftMarketplaceChallenge__factory extends ContractFactory {
  constructor(...args: NftMarketplaceChallengeConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _daiAddress: PromiseOrValue<string>,
    _usdcAddress: PromiseOrValue<string>,
    _ethPriceFeed: PromiseOrValue<string>,
    _daiPricefeed: PromiseOrValue<string>,
    _usdcPricefeed: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<NftMarketplaceChallenge> {
    return super.deploy(
      _daiAddress,
      _usdcAddress,
      _ethPriceFeed,
      _daiPricefeed,
      _usdcPricefeed,
      overrides || {}
    ) as Promise<NftMarketplaceChallenge>;
  }
  override getDeployTransaction(
    _daiAddress: PromiseOrValue<string>,
    _usdcAddress: PromiseOrValue<string>,
    _ethPriceFeed: PromiseOrValue<string>,
    _daiPricefeed: PromiseOrValue<string>,
    _usdcPricefeed: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _daiAddress,
      _usdcAddress,
      _ethPriceFeed,
      _daiPricefeed,
      _usdcPricefeed,
      overrides || {}
    );
  }
  override attach(address: string): NftMarketplaceChallenge {
    return super.attach(address) as NftMarketplaceChallenge;
  }
  override connect(signer: Signer): NftMarketplaceChallenge__factory {
    return super.connect(signer) as NftMarketplaceChallenge__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): NftMarketplaceChallengeInterface {
    return new utils.Interface(_abi) as NftMarketplaceChallengeInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): NftMarketplaceChallenge {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as NftMarketplaceChallenge;
  }
}
