/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../common";
import type {
  NftMarketplaceChallenge,
  NftMarketplaceChallengeInterface,
} from "../../contracts/NftMarketplaceChallenge";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_daiAddress",
        type: "address",
      },
      {
        internalType: "address",
        name: "_usdcAddress",
        type: "address",
      },
      {
        internalType: "address",
        name: "_ethPriceFeed",
        type: "address",
      },
      {
        internalType: "address",
        name: "_daiPricefeed",
        type: "address",
      },
      {
        internalType: "address",
        name: "_usdcPricefeed",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "NftMarketplace__ERC20ApproveFailed",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "nftAddress",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "NftMarketplace__NftAlreadyListed",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "withdrawer",
        type: "address",
      },
    ],
    name: "NftMarketplace__NoProceeds",
    type: "error",
  },
  {
    inputs: [],
    name: "NftMarketplace__NotApproved",
    type: "error",
  },
  {
    inputs: [],
    name: "NftMarketplace__NotApprovedToken",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "nftAddress",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "NftMarketplace__NotListed",
    type: "error",
  },
  {
    inputs: [],
    name: "NftMarketplace__NotOwner",
    type: "error",
  },
  {
    inputs: [],
    name: "NftMarketplace__PriceMustBeGreaterThanZero",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "nftAddress",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "price",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "token",
        type: "uint256",
      },
    ],
    name: "NftMarketplace__PriceNotMet",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "withdrawer",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "NftMarketplace__WithdrawFailed",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "nftAddress",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "tokenId",
            type: "uint256",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "amount",
                type: "uint256",
              },
              {
                internalType: "enum NftMarketplaceChallenge.Token",
                name: "token",
                type: "uint8",
              },
            ],
            internalType: "struct NftMarketplaceChallenge.Pricing",
            name: "pricing",
            type: "tuple",
          },
        ],
        indexed: false,
        internalType: "struct NftMarketplaceChallenge.ListingParams",
        name: "listingParams",
        type: "tuple",
      },
      {
        indexed: true,
        internalType: "address",
        name: "buyer",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "seller",
        type: "address",
      },
    ],
    name: "ItemBought",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "nftAddress",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "tokenId",
            type: "uint256",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "amount",
                type: "uint256",
              },
              {
                internalType: "enum NftMarketplaceChallenge.Token",
                name: "token",
                type: "uint8",
              },
            ],
            internalType: "struct NftMarketplaceChallenge.Pricing",
            name: "pricing",
            type: "tuple",
          },
        ],
        indexed: false,
        internalType: "struct NftMarketplaceChallenge.ListingParams",
        name: "listingParams",
        type: "tuple",
      },
      {
        indexed: false,
        internalType: "address",
        name: "seller",
        type: "address",
      },
    ],
    name: "ItemListed",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "nftAddress",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "address",
        name: "seller",
        type: "address",
      },
    ],
    name: "ListingCancelled",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "withdrawer",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "token",
        type: "uint256",
      },
    ],
    name: "Withdraw",
    type: "event",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "nftAddress",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "tokenId",
            type: "uint256",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "amount",
                type: "uint256",
              },
              {
                internalType: "enum NftMarketplaceChallenge.Token",
                name: "token",
                type: "uint8",
              },
            ],
            internalType: "struct NftMarketplaceChallenge.Pricing",
            name: "pricing",
            type: "tuple",
          },
        ],
        internalType: "struct NftMarketplaceChallenge.ListingParams",
        name: "listingParams",
        type: "tuple",
      },
    ],
    name: "buyItem",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "nftAddress",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "cancelListing",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "getDaiPriceFeed",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getDaiToken",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getEthPriceFeed",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "nftAddress",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "getListing",
    outputs: [
      {
        components: [
          {
            components: [
              {
                internalType: "uint256",
                name: "amount",
                type: "uint256",
              },
              {
                internalType: "enum NftMarketplaceChallenge.Token",
                name: "token",
                type: "uint8",
              },
            ],
            internalType: "struct NftMarketplaceChallenge.Pricing",
            name: "pricing",
            type: "tuple",
          },
          {
            internalType: "address",
            name: "seller",
            type: "address",
          },
        ],
        internalType: "struct NftMarketplaceChallenge.Listing",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "nftAddress",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "getListingPrice",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "amount",
            type: "uint256",
          },
          {
            internalType: "enum NftMarketplaceChallenge.Token",
            name: "token",
            type: "uint8",
          },
        ],
        internalType: "struct NftMarketplaceChallenge.Pricing",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "nftAddress",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "getListingPriceUsd",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        internalType: "enum NftMarketplaceChallenge.Token",
        name: "token",
        type: "uint8",
      },
    ],
    name: "getProceeds",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getUsdcPriceFeed",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getUsdcToken",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "nftAddress",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "tokenId",
            type: "uint256",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "amount",
                type: "uint256",
              },
              {
                internalType: "enum NftMarketplaceChallenge.Token",
                name: "token",
                type: "uint8",
              },
            ],
            internalType: "struct NftMarketplaceChallenge.Pricing",
            name: "pricing",
            type: "tuple",
          },
        ],
        internalType: "struct NftMarketplaceChallenge.ListingParams",
        name: "listingParams",
        type: "tuple",
      },
    ],
    name: "listItem",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "enum NftMarketplaceChallenge.Token",
        name: "",
        type: "uint8",
      },
    ],
    name: "tokenAddresses",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "nftAddress",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "tokenId",
            type: "uint256",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "amount",
                type: "uint256",
              },
              {
                internalType: "enum NftMarketplaceChallenge.Token",
                name: "token",
                type: "uint8",
              },
            ],
            internalType: "struct NftMarketplaceChallenge.Pricing",
            name: "pricing",
            type: "tuple",
          },
        ],
        internalType: "struct NftMarketplaceChallenge.ListingParams",
        name: "listingParams",
        type: "tuple",
      },
    ],
    name: "updateListing",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "withdrawAllProceeds",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "enum NftMarketplaceChallenge.Token",
        name: "token",
        type: "uint8",
      },
    ],
    name: "withdrawSingleProceeds",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60e06040523480156200001157600080fd5b5060405162003abd38038062003abd83398181016040528101906200003791906200027c565b60016000819055506000600360008060028111156200005b576200005a62000338565b5b600281111562000070576200006f62000338565b5b815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550846003600060016002811115620000d857620000d762000338565b5b6002811115620000ed57620000ec62000338565b5b815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550836003600060028081111562000154576200015362000338565b5b600281111562000169576200016862000338565b5b815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508273ffffffffffffffffffffffffffffffffffffffff1660808173ffffffffffffffffffffffffffffffffffffffff1660601b815250508173ffffffffffffffffffffffffffffffffffffffff1660a08173ffffffffffffffffffffffffffffffffffffffff1660601b815250508073ffffffffffffffffffffffffffffffffffffffff1660c08173ffffffffffffffffffffffffffffffffffffffff1660601b81525050505050505062000386565b60008151905062000276816200036c565b92915050565b600080600080600060a086880312156200029b576200029a62000367565b5b6000620002ab8882890162000265565b9550506020620002be8882890162000265565b9450506040620002d18882890162000265565b9350506060620002e48882890162000265565b9250506080620002f78882890162000265565b9150509295509295909350565b6000620003118262000318565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b600080fd5b620003778162000304565b81146200038357600080fd5b50565b60805160601c60a05160601c60c05160601c6136e9620003d460003960008181611c130152611cf3015260008181611b2d01526126d0015260008181611a46015261234b01526136e96000f3fe6080604052600436106100f35760003560e01c8063a7db80cc1161008a578063cf0d743711610059578063cf0d74371461031d578063d794bb281461035a578063ecc9379d14610397578063f1c1689b146103ae576100f3565b8063a7db80cc14610273578063afa7d1f01461029e578063b2ddee06146102c9578063b7b93b81146102f2576100f3565b806388700d1c116100c657806388700d1c146101a55780638e1da09f146101e2578063a50f713b1461021f578063a646dc7a1461024a576100f3565b806306d78397146100f85780633b44390a1461013557806366fee1f5146101605780636714530d1461017c575b600080fd5b34801561010457600080fd5b5061011f600480360381019061011a9190612e0d565b6103d7565b60405161012c9190613284565b60405180910390f35b34801561014157600080fd5b5061014a61048a565b6040516101579190613100565b60405180910390f35b61017a60048036038101906101759190612ea7565b6104e9565b005b34801561018857600080fd5b506101a3600480360381019061019e9190612e7a565b61116b565b005b3480156101b157600080fd5b506101cc60048036038101906101c79190612e0d565b6117e3565b6040516101d99190613269565b60405180910390f35b3480156101ee57600080fd5b5061020960048036038101906102049190612e0d565b6118fd565b604051610216919061329f565b60405180910390f35b34801561022b57600080fd5b50610234611cef565b6040516102419190613100565b60405180910390f35b34801561025657600080fd5b50610271600480360381019061026c9190612ea7565b611d17565b005b34801561027f57600080fd5b506102886122e7565b6040516102959190613100565b60405180910390f35b3480156102aa57600080fd5b506102b3612347565b6040516102c09190613100565b60405180910390f35b3480156102d557600080fd5b506102f060048036038101906102eb9190612e0d565b61236f565b005b3480156102fe57600080fd5b506103076126cc565b6040516103149190613100565b60405180910390f35b34801561032957600080fd5b50610344600480360381019061033f9190612e7a565b6126f4565b6040516103519190613100565b60405180910390f35b34801561036657600080fd5b50610381600480360381019061037c9190612dcd565b612727565b60405161038e919061329f565b60405180910390f35b3480156103a357600080fd5b506103ac612805565b005b3480156103ba57600080fd5b506103d560048036038101906103d09190612ea7565b612898565b005b6103df612be2565b600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000838152602001908152602001600020600001604051806040016040529081600082015481526020016001820160009054906101000a900460ff16600281111561046c5761046b613577565b5b600281111561047e5761047d613577565b5b81525050905092915050565b6000600360006002808111156104a3576104a2613577565b5b60028111156104b5576104b4613577565b5b815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b806000015181602001516000600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600083815260200190815260200160002060405180604001604052908160008201604051806040016040529081600082015481526020016001820160009054906101000a900460ff16600281111561058f5761058e613577565b5b60028111156105a1576105a0613577565b5b8152505081526020016002820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152505090506000816000015160000151116106505782826040517f6d350f2200000000000000000000000000000000000000000000000000000000815260040161064792919061317b565b60405180910390fd5b8360400151602001516000600281111561066d5761066c613577565b5b8160028111156106805761067f613577565b5b141580156106b357506001600281111561069d5761069c613577565b5b8160028111156106b0576106af613577565b5b14155b80156106e357506002808111156106cd576106cc613577565b5b8160028111156106e0576106df613577565b5b14155b1561071a576040517f6752f48700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b84600060016000836000015173ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008360200151815260200190815260200160002060405180604001604052908160008201604051806040016040529081600082015481526020016001820160009054906101000a900460ff1660028111156107bf576107be613577565b5b60028111156107d1576107d0613577565b5b8152505081526020016002820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152505090506000600281111561084557610844613577565b5b82604001516020015160028111156108605761085f613577565b5b14156108e8578060000151600001513410156108e3578160000151826020015183604001516000015184604001516020015160028111156108a4576108a3613577565b5b6040517f8bb3a8f30000000000000000000000000000000000000000000000000000000081526004016108da94939291906131db565b60405180910390fd5b610a53565b600060036000846040015160200151600281111561090957610908613577565b5b600281111561091b5761091a613577565b5b815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690508260400151600001518173ffffffffffffffffffffffffffffffffffffffff166370a08231336040518263ffffffff1660e01b815260040161098e9190613100565b60206040518083038186803b1580156109a657600080fd5b505afa1580156109ba573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109de9190612ed4565b1015610a5157826000015183602001518460400151600001518560400151602001516002811115610a1257610a11613577565b5b6040517f8bb3a8f3000000000000000000000000000000000000000000000000000000008152600401610a4894939291906131db565b60405180910390fd5b505b60026000541415610a99576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a9090613220565b60405180910390fd5b6002600081905550600080600160008a6000015173ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008a60200151815260200190815260200160002060405180604001604052908160008201604051806040016040529081600082015481526020016001820160009054906101000a900460ff166002811115610b4657610b45613577565b5b6002811115610b5857610b57613577565b5b8152505081526020016002820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681525050905060008960000151905060006002811115610bd557610bd4613577565b5b8a60400151602001516002811115610bf057610bef613577565b5b14610ec357600360008b60400151602001516002811115610c1457610c13613577565b5b6002811115610c2657610c25613577565b5b815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16925060008373ffffffffffffffffffffffffffffffffffffffff1663095ea7b384602001518d60400151600001516040518363ffffffff1660e01b8152600401610ca092919061317b565b602060405180830381600087803b158015610cba57600080fd5b505af1158015610cce573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610cf29190612e4d565b905080610d2b576040517ff2d5f7bf00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8373ffffffffffffffffffffffffffffffffffffffff166323b872dd33308e60400151600001516040518463ffffffff1660e01b8152600401610d7093929190613144565b602060405180830381600087803b158015610d8a57600080fd5b505af1158015610d9e573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610dc29190612e4d565b508a604001516000015160026000856020015173ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000600360008f60400151602001516002811115610e3057610e2f613577565b5b6002811115610e4257610e41613577565b5b815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254610eba91906132fb565b92505081905550505b60006002811115610ed757610ed6613577565b5b8a60400151602001516002811115610ef257610ef1613577565b5b1415610fe7573460026000846020015173ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600060036000806002811115610f5557610f54613577565b5b6002811115610f6757610f66613577565b5b815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254610fdf91906132fb565b925050819055505b600160008b6000015173ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008b60200151815260200190815260200160002060008082016000808201600090556001820160006101000a81549060ff021916905550506002820160006101000a81549073ffffffffffffffffffffffffffffffffffffffff021916905550508073ffffffffffffffffffffffffffffffffffffffff166342842e0e8360200151338d602001516040518463ffffffff1660e01b81526004016110d193929190613144565b600060405180830381600087803b1580156110eb57600080fd5b505af11580156110ff573d6000803e3d6000fd5b505050503373ffffffffffffffffffffffffffffffffffffffff167f5a58d5efb805360c1d439380675d6b4d557bada5737540b8c2ba2b361443942e8b846020015160405161114f929190613240565b60405180910390a2505050600160008190555050505050505050565b600260005414156111b1576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016111a890613220565b60405180910390fd5b60026000819055506000600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006003600085600281111561121357611212613577565b5b600281111561122557611224613577565b5b815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050600081116112d657336040517f11b60bf40000000000000000000000000000000000000000000000000000000081526004016112cd9190613100565b60405180910390fd5b6000600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000600360008660028111156113305761132f613577565b5b600281111561134257611341613577565b5b815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550600060028111156113c3576113c2613577565b5b8260028111156113d6576113d5613577565b5b141561156a5760003373ffffffffffffffffffffffffffffffffffffffff1682604051611402906130eb565b60006040518083038185875af1925050503d806000811461143f576040519150601f19603f3d011682016040523d82523d6000602084013e611444565b606091505b50509050806115645781600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000600360008760028111156114a6576114a5613577565b5b60028111156114b8576114b7613577565b5b815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555033826040517f840e80d800000000000000000000000000000000000000000000000000000000815260040161155b92919061317b565b60405180910390fd5b50611776565b60006003600084600281111561158357611582613577565b5b600281111561159557611594613577565b5b815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905060008173ffffffffffffffffffffffffffffffffffffffff1663a9059cbb33856040518363ffffffff1660e01b815260040161160392919061311b565b602060405180830381600087803b15801561161d57600080fd5b505af1158015611631573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906116559190612e4d565b9050806117735782600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000600360008860028111156116b5576116b4613577565b5b60028111156116c7576116c6613577565b5b815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555033836040517f840e80d800000000000000000000000000000000000000000000000000000000815260040161176a92919061317b565b60405180910390fd5b50505b803373ffffffffffffffffffffffffffffffffffffffff167ff279e6a1f5e320cca91135676d9cb6e44ca8a08c0b88342bcdb1144f6511b5688460028111156117c2576117c1613577565b5b6040516117cf919061329f565b60405180910390a350600160008190555050565b6117eb612c0e565b600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600083815260200190815260200160002060405180604001604052908160008201604051806040016040529081600082015481526020016001820160009054906101000a900460ff16600281111561188557611884613577565b5b600281111561189757611896613577565b5b8152505081526020016002820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681525050905092915050565b600080600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600084815260200190815260200160002060405180604001604052908160008201604051806040016040529081600082015481526020016001820160009054906101000a900460ff16600281111561199a57611999613577565b5b60028111156119ac576119ab613577565b5b8152505081526020016002820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681525050905060008060006002811115611a2357611a22613577565b5b8360000151602001516002811115611a3e57611a3d613577565b5b1415611af6577f0000000000000000000000000000000000000000000000000000000000000000915060008273ffffffffffffffffffffffffffffffffffffffff1663feaf968c6040518163ffffffff1660e01b815260040160a06040518083038186803b158015611aaf57600080fd5b505afa158015611ac3573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611ae79190612f01565b50505091505080915050611cc1565b60016002811115611b0a57611b09613577565b5b8360000151602001516002811115611b2557611b24613577565b5b1415611bdd577f0000000000000000000000000000000000000000000000000000000000000000915060008273ffffffffffffffffffffffffffffffffffffffff1663feaf968c6040518163ffffffff1660e01b815260040160a06040518083038186803b158015611b9657600080fd5b505afa158015611baa573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611bce9190612f01565b50505091505080915050611cc0565b600280811115611bf057611bef613577565b5b8360000151602001516002811115611c0b57611c0a613577565b5b1415611cbf577f0000000000000000000000000000000000000000000000000000000000000000915060008273ffffffffffffffffffffffffffffffffffffffff1663feaf968c6040518163ffffffff1660e01b815260040160a06040518083038186803b158015611c7c57600080fd5b505afa158015611c90573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611cb49190612f01565b505050915050809150505b5b5b6305f5e10081846000015160000151611cda9190613382565b611ce49190613351565b935050505092915050565b60007f0000000000000000000000000000000000000000000000000000000000000000905090565b80600001518160200151336000600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600084815260200190815260200160002060405180604001604052908160008201604051806040016040529081600082015481526020016001820160009054906101000a900460ff166002811115611dbe57611dbd613577565b5b6002811115611dd057611dcf613577565b5b8152505081526020016002820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681525050905060008160000151600001511115611e82578383836040517f73a5c40a000000000000000000000000000000000000000000000000000000008152600401611e79939291906131a4565b60405180910390fd5b8460000151856020015133600083905060008173ffffffffffffffffffffffffffffffffffffffff16636352211e856040518263ffffffff1660e01b8152600401611ecd919061329f565b60206040518083038186803b158015611ee557600080fd5b505afa158015611ef9573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611f1d9190612da0565b90508273ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614611f84576040517f94953b6000000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b89604001516020015160006002811115611fa157611fa0613577565b5b816002811115611fb457611fb3613577565b5b14158015611fe7575060016002811115611fd157611fd0613577565b5b816002811115611fe457611fe3613577565b5b14155b8015612017575060028081111561200157612000613577565b5b81600281111561201457612013613577565b5b14155b1561204e576040517f6752f48700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60008b604001516000015111612090576040517ffcfdbf1200000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60008b6000015190503073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1663081812fc8e602001516040518263ffffffff1660e01b81526004016120ed919061329f565b60206040518083038186803b15801561210557600080fd5b505afa158015612119573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061213d9190612da0565b73ffffffffffffffffffffffffffffffffffffffff161461218a576040517f8189633e00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60405180604001604052808d6040015181526020013373ffffffffffffffffffffffffffffffffffffffff16815250600160008e6000015173ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008e6020015181526020019081526020016000206000820151816000016000820151816000015560208201518160010160006101000a81548160ff0219169083600281111561224f5761224e613577565b5b0217905550505060208201518160020160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055509050507f4ae53a3535aa51e5e1f121627676cb38488eba0ff4b93cdb333b2c8a345602038c336040516122d1929190613240565b60405180910390a1505050505050505050505050565b6000600360006001600281111561230157612300613577565b5b600281111561231357612312613577565b5b815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b60007f0000000000000000000000000000000000000000000000000000000000000000905090565b818133600083905060008173ffffffffffffffffffffffffffffffffffffffff16636352211e856040518263ffffffff1660e01b81526004016123b2919061329f565b60206040518083038186803b1580156123ca57600080fd5b505afa1580156123de573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906124029190612da0565b90508273ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614612469576040517f94953b6000000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b86866000600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600083815260200190815260200160002060405180604001604052908160008201604051806040016040529081600082015481526020016001820160009054906101000a900460ff16600281111561250757612506613577565b5b600281111561251957612518613577565b5b8152505081526020016002820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152505090506000816000015160000151116125c85782826040517f6d350f220000000000000000000000000000000000000000000000000000000081526004016125bf92919061317b565b60405180910390fd5b600160008b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008a815260200190815260200160002060008082016000808201600090556001820160006101000a81549060ff021916905550506002820160006101000a81549073ffffffffffffffffffffffffffffffffffffffff021916905550503373ffffffffffffffffffffffffffffffffffffffff16898b73ffffffffffffffffffffffffffffffffffffffff167f8526cb6d400b8a551983c99e6d6fb1775b7a0deeb5d1e39d3ee65bc59e5eac2760405160405180910390a450505050505050505050565b60007f0000000000000000000000000000000000000000000000000000000000000000905090565b60036020528060005260406000206000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000600260008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006003600085600281111561278157612780613577565b5b600281111561279357612792613577565b5b815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b6002600054141561284b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161284290613220565b60405180910390fd5b600260008190555060005b600381101561288d5761287a81600281111561287557612874613577565b5b61116b565b8080612885906134d0565b915050612856565b506001600081905550565b8060000151816020015133600083905060008173ffffffffffffffffffffffffffffffffffffffff16636352211e856040518263ffffffff1660e01b81526004016128e3919061329f565b60206040518083038186803b1580156128fb57600080fd5b505afa15801561290f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906129339190612da0565b90508273ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161461299a576040517f94953b6000000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b856000015186602001516000600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600083815260200190815260200160002060405180604001604052908160008201604051806040016040529081600082015481526020016001820160009054906101000a900460ff166002811115612a4057612a3f613577565b5b6002811115612a5257612a51613577565b5b8152505081526020016002820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815250509050600081600001516000015111612b015782826040517f6d350f22000000000000000000000000000000000000000000000000000000008152600401612af892919061317b565b60405180910390fd5b8860400151600160008b6000015173ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008b6020015181526020019081526020016000206000016000820151816000015560208201518160010160006101000a81548160ff02191690836002811115612b9657612b95613577565b5b02179055509050507f4ae53a3535aa51e5e1f121627676cb38488eba0ff4b93cdb333b2c8a345602038933604051612bcf929190613240565b60405180910390a1505050505050505050565b60405180604001604052806000815260200160006002811115612c0857612c07613577565b5b81525090565b6040518060400160405280612c21612be2565b8152602001600073ffffffffffffffffffffffffffffffffffffffff1681525090565b600081359050612c5381613630565b92915050565b600081519050612c6881613630565b92915050565b600081519050612c7d81613647565b92915050565b600081359050612c928161365e565b92915050565b600081519050612ca78161366e565b92915050565b600060808284031215612cc357612cc26135d5565b5b612ccd60606132ba565b90506000612cdd84828501612c44565b6000830152506020612cf184828501612d61565b6020830152506040612d0584828501612d11565b60408301525092915050565b600060408284031215612d2757612d266135d5565b5b612d3160406132ba565b90506000612d4184828501612d61565b6000830152506020612d5584828501612c83565b60208301525092915050565b600081359050612d7081613685565b92915050565b600081519050612d8581613685565b92915050565b600081519050612d9a8161369c565b92915050565b600060208284031215612db657612db56135da565b5b6000612dc484828501612c59565b91505092915050565b60008060408385031215612de457612de36135da565b5b6000612df285828601612c44565b9250506020612e0385828601612c83565b9150509250929050565b60008060408385031215612e2457612e236135da565b5b6000612e3285828601612c44565b9250506020612e4385828601612d61565b9150509250929050565b600060208284031215612e6357612e626135da565b5b6000612e7184828501612c6e565b91505092915050565b600060208284031215612e9057612e8f6135da565b5b6000612e9e84828501612c83565b91505092915050565b600060808284031215612ebd57612ebc6135da565b5b6000612ecb84828501612cad565b91505092915050565b600060208284031215612eea57612ee96135da565b5b6000612ef884828501612d76565b91505092915050565b600080600080600060a08688031215612f1d57612f1c6135da565b5b6000612f2b88828901612d8b565b9550506020612f3c88828901612c98565b9450506040612f4d88828901612d76565b9350506060612f5e88828901612d76565b9250506080612f6f88828901612d8b565b9150509295509295909350565b612f8581613457565b82525050565b612f94816133dc565b82525050565b612fa3816133dc565b82525050565b612fb281613469565b82525050565b6000612fc56000836132df565b9150612fd0826135f0565b600082019050919050565b6000612fe8601f836132ea565b9150612ff3826135f3565b602082019050919050565b6080820160008201516130146000850182612f8b565b50602082015161302760208501826130cd565b50604082015161303a604085018261306f565b50505050565b606082016000820151613056600085018261306f565b5060208201516130696040850182612f8b565b50505050565b60408201600082015161308560008501826130cd565b5060208201516130986020850182612fa9565b50505050565b6040820160008201516130b460008501826130cd565b5060208201516130c76020850182612fa9565b50505050565b6130d681613437565b82525050565b6130e581613437565b82525050565b60006130f682612fb8565b9150819050919050565b60006020820190506131156000830184612f9a565b92915050565b60006040820190506131306000830185612f7c565b61313d60208301846130dc565b9392505050565b60006060820190506131596000830186612f9a565b6131666020830185612f9a565b61317360408301846130dc565b949350505050565b60006040820190506131906000830185612f9a565b61319d60208301846130dc565b9392505050565b60006060820190506131b96000830186612f9a565b6131c660208301856130dc565b6131d36040830184612f9a565b949350505050565b60006080820190506131f06000830187612f9a565b6131fd60208301866130dc565b61320a60408301856130dc565b61321760608301846130dc565b95945050505050565b6000602082019050818103600083015261323981612fdb565b9050919050565b600060a0820190506132556000830185612ffe565b6132626080830184612f9a565b9392505050565b600060608201905061327e6000830184613040565b92915050565b6000604082019050613299600083018461309e565b92915050565b60006020820190506132b460008301846130dc565b92915050565b60006132c46132d5565b90506132d0828261349f565b919050565b6000604051905090565b600081905092915050565b600082825260208201905092915050565b600061330682613437565b915061331183613437565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0382111561334657613345613519565b5b828201905092915050565b600061335c82613437565b915061336783613437565b92508261337757613376613548565b5b828204905092915050565b600061338d82613437565b915061339883613437565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff04831182151516156133d1576133d0613519565b5b828202905092915050565b60006133e782613417565b9050919050565b60008115159050919050565b60008190506134088261361c565b919050565b6000819050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b600069ffffffffffffffffffff82169050919050565b60006134628261347b565b9050919050565b6000613474826133fa565b9050919050565b60006134868261348d565b9050919050565b600061349882613417565b9050919050565b6134a8826135df565b810181811067ffffffffffffffff821117156134c7576134c66135a6565b5b80604052505050565b60006134db82613437565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82141561350e5761350d613519565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600080fd5b600080fd5b6000601f19601f8301169050919050565b50565b7f5265656e7472616e637947756172643a207265656e7472616e742063616c6c00600082015250565b6003811061362d5761362c613577565b5b50565b613639816133dc565b811461364457600080fd5b50565b613650816133ee565b811461365b57600080fd5b50565b6003811061366b57600080fd5b50565b6136778161340d565b811461368257600080fd5b50565b61368e81613437565b811461369957600080fd5b50565b6136a581613441565b81146136b057600080fd5b5056fea2646970667358221220057ebf034da71cd936dcc17e2ad7c336d74cd982a6d6bfbac7b1a7111f22d5a564736f6c63430008070033";

type NftMarketplaceChallengeConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: NftMarketplaceChallengeConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class NftMarketplaceChallenge__factory extends ContractFactory {
  constructor(...args: NftMarketplaceChallengeConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _daiAddress: PromiseOrValue<string>,
    _usdcAddress: PromiseOrValue<string>,
    _ethPriceFeed: PromiseOrValue<string>,
    _daiPricefeed: PromiseOrValue<string>,
    _usdcPricefeed: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<NftMarketplaceChallenge> {
    return super.deploy(
      _daiAddress,
      _usdcAddress,
      _ethPriceFeed,
      _daiPricefeed,
      _usdcPricefeed,
      overrides || {}
    ) as Promise<NftMarketplaceChallenge>;
  }
  override getDeployTransaction(
    _daiAddress: PromiseOrValue<string>,
    _usdcAddress: PromiseOrValue<string>,
    _ethPriceFeed: PromiseOrValue<string>,
    _daiPricefeed: PromiseOrValue<string>,
    _usdcPricefeed: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _daiAddress,
      _usdcAddress,
      _ethPriceFeed,
      _daiPricefeed,
      _usdcPricefeed,
      overrides || {}
    );
  }
  override attach(address: string): NftMarketplaceChallenge {
    return super.attach(address) as NftMarketplaceChallenge;
  }
  override connect(signer: Signer): NftMarketplaceChallenge__factory {
    return super.connect(signer) as NftMarketplaceChallenge__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): NftMarketplaceChallengeInterface {
    return new utils.Interface(_abi) as NftMarketplaceChallengeInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): NftMarketplaceChallenge {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as NftMarketplaceChallenge;
  }
}
